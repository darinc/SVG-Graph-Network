!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.SVGGraphNetwork=e():t.SVGGraphNetwork=e()}(this,function(){return function(){"use strict";var t,e={d:function(t,s){for(var i in s)e.o(s,i)&&!e.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:s[i]})},o:function(t,e){return Object.prototype.hasOwnProperty.call(t,e)}},s={};e.d(s,{default:function(){return F}});class i{constructor(t=0,e=0){this.x=t,this.y=e}add(t){return new i(this.x+t.x,this.y+t.y)}subtract(t){return new i(this.x-t.x,this.y-t.y)}multiply(t){return new i(this.x*t,this.y*t)}divide(t){if(0===t)throw new Error("Division by zero");return new i(this.x/t,this.y/t)}magnitude(){return Math.sqrt(this.x*this.x+this.y*this.y)}normalize(){const t=this.magnitude();if(0===t)throw new Error("Cannot normalize zero vector");return new i(this.x/t,this.y/t)}static distance(t,e){const s=t.x-e.x,i=t.y-e.y;return Math.sqrt(s*s+i*i)}static zero(){return new i(0,0)}static unitX(){return new i(1,0)}static unitY(){return new i(0,1)}static fromPolar(t,e){return new i(t*Math.cos(e),t*Math.sin(e))}angle(){return Math.atan2(this.y,this.x)}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}clone(){return new i(this.x,this.y)}equals(t,e=1e-10){return Math.abs(this.x-t.x)<e&&Math.abs(this.y-t.y)<e}toString(){return`Vector(${this.x.toFixed(3)}, ${this.y.toFixed(3)})`}toArray(){return[this.x,this.y]}toObject(){return{x:this.x,y:this.y}}}class n{constructor(t,e=800,s=600){this.data=t,this.dynamicWidth=null,this.dynamicHeight=null,this.position=new i(Math.random()*e,Math.random()*s),this.velocity=new i,this.force=new i,this.size=void 0!==t.size?t.size:20,this.isFixed=!1}resetPosition(t,e){this.velocity=new i,this.isFixed||(this.position=new i(Math.random()*t,Math.random()*e))}fix(){this.isFixed=!0,this.velocity=new i}unfix(){this.isFixed=!1}getName(){return this.data.name}getId(){return this.data.id}getType(){return this.data.type}getShape(){return this.data.shape||"circle"}hasSameType(t){return void 0!==this.data.type&&void 0!==t.data.type&&this.data.type===t.data.type}distanceTo(t){return i.distance(this.position,t.position)}directionTo(t){return t.position.subtract(this.position).normalize()}applyForce(t){this.force=this.force.add(t)}resetForce(){this.force=new i}updatePosition(t=1,e=.95){this.isFixed||(this.velocity=this.velocity.add(this.force.multiply(t)),this.velocity=this.velocity.multiply(e),this.position=this.position.add(this.velocity.multiply(t)))}getEffectiveRadius(){switch(this.getShape()){case"rectangle":return this.dynamicWidth&&this.dynamicHeight?Math.max(this.dynamicWidth,this.dynamicHeight)/2:1.4*this.size;case"square":case"triangle":return 1.4*this.size;default:return this.size}}clone(t,e){const s=new n({...this.data},t,e);return void 0!==t&&void 0!==e||(s.position=this.position.clone(),s.isFixed=this.isFixed),s}toObject(){return{data:this.data,position:this.position.toObject(),velocity:this.velocity.toObject(),isFixed:this.isFixed,size:this.size}}toString(){return`Node(${this.data.id}: "${this.data.name}" at ${this.position.toString()})`}static fromObject(t,e,s){const r=new n(t.data,e,s);return t.position&&(r.position=new i(t.position.x,t.position.y)),t.velocity&&(r.velocity=new i(t.velocity.x,t.velocity.y)),void 0!==t.isFixed&&(r.isFixed=t.isFixed),void 0!==t.size&&(r.size=t.size),r}}class r{constructor(t={}){this.config={damping:.95,repulsionStrength:6500,attractionStrength:.001,groupingStrength:.001,...t}}updateConfig(t){Object.assign(this.config,t)}updateForces(t,e,s=null){const i=Array.from(t.values());i.forEach(t=>t.resetForce());for(let t=0;t<i.length;t++)for(let e=t+1;e<i.length;e++){const n=i[t],r=i[e];(!s||s.has(n.getId())&&s.has(r.getId()))&&(this._calculateRepulsionForce(n,r),this._calculateGroupingForce(n,r))}return e.forEach(t=>{(!s||s.has(t.source.getId())&&s.has(t.target.getId()))&&this._calculateAttractionForce(t.source,t.target,t.weight)}),this._calculateMetrics(t,s)}updatePositions(t,e=null,s=1){Array.from(t.values()).forEach(t=>{t.isFixed||e&&!e.has(t.getId())||t.updatePosition(s,this.config.damping)})}_calculateRepulsionForce(t,e){const s=t.position.subtract(e.position),n=s.magnitude();if(0===n){const s=2*Math.random()*Math.PI,n=i.fromPolar(.01*this.config.repulsionStrength,s);return t.applyForce(n),void e.applyForce(n.multiply(-1))}const r=.5*(t.getEffectiveRadius()+e.getEffectiveRadius()),o=Math.max(n,r),a=s.normalize().multiply(this.config.repulsionStrength/(o*o));t.applyForce(a),e.applyForce(a.multiply(-1))}_calculateGroupingForce(t,e){if(!t.hasSameType(e)||this.config.groupingStrength<=0)return;const s=t.position.subtract(e.position),i=s.magnitude();if(0===i)return;const n=s.normalize().multiply(-this.config.groupingStrength*i);t.applyForce(n),e.applyForce(n.multiply(-1))}_calculateAttractionForce(t,e,s=1){const i=t.position.subtract(e.position),n=i.magnitude();if(0===n)return;const r=i.normalize().multiply(this.config.attractionStrength*n*s);t.applyForce(r.multiply(-1)),e.applyForce(r)}_calculateMetrics(t,e){const s=Array.from(t.values()),i=e?s.filter(t=>e.has(t.getId())):s;let n=0,r=0,o=0;return i.forEach(t=>{const e=t.force.magnitude(),s=t.velocity.magnitude()*t.velocity.magnitude()*.5;n+=s,o+=e,r=Math.max(r,e)}),{totalEnergy:n,maxForce:r,averageForce:i.length>0?o/i.length:0,nodeCount:s.length,activeNodeCount:i.length}}getConfig(){return{...this.config}}resetForces(t){Array.from(t.values()).forEach(t=>t.resetForce())}applyExternalForce(t,e,s){const i=s.get(t);return!!i&&(i.applyForce(e),!0)}calculateCenterOfMass(t,e=null){const s=Array.from(t.values()),n=e?s.filter(t=>e.has(t.getId())):s;return 0===n.length?new i:n.reduce((t,e)=>t.add(e.position),new i).divide(n.length)}applyCenteringForce(t,e=null,s=.001){const i=this.calculateCenterOfMass(t,e),n=Array.from(t.values());(e?n.filter(t=>e.has(t.getId())):n).forEach(t=>{if(t.isFixed)return;const e=i.subtract(t.position),n=e.magnitude();if(n>0){const i=e.normalize().multiply(s*n);t.applyForce(i)}})}isInEquilibrium(t,e=.1){return t.totalEnergy<e&&t.maxForce<e}static createLink(t,e,s,i){const n=s.get(t),r=s.get(e);return n&&r?{source:n,target:r,weight:i}:null}static createLinks(t,e){return t.map(t=>r.createLink(t.source,t.target,e,t.weight)).filter(t=>null!==t)}toObject(){return{config:this.getConfig(),type:"PhysicsEngine",version:"2.0.0"}}toString(){return`PhysicsEngine(damping: ${this.config.damping}, repulsion: ${this.config.repulsionStrength})`}}class o{constructor(t,e={},s={},i){this.titleElement=null,this.breadcrumbsElement=null,this.legendElement=null,this.controls=null,this.settingsPanel=null,this.mobileControls=null,this.zoomInButton=null,this.zoomOutButton=null,this.resetButton=null,this.themeToggle=null,this.settingsToggle=null,this.settingsVisible=!1,this.container=t,this.themeManager=i,this.config={showControls:!0,showLegend:!0,showTitle:!0,showBreadcrumbs:!0,theme:"dark",title:"Graph Network",...e},this.callbacks=s}initialize(){this.createTitle(),this.createBreadcrumbs(),this.createLegend(),this.createControls(),this.createSettingsPanel()}setElementClass(t,e){try{t.className=e}catch{t.classList.add(e)}}createTitle(){this.config.showTitle&&(this.titleElement=document.createElement("h2"),this.setElementClass(this.titleElement,"graph-network-title"),this.titleElement.textContent=this.config.title,this.updateTitleTheme(),this.container.appendChild(this.titleElement))}updateTitleTheme(){if(!this.titleElement)return;const t=this.themeManager.getColor("foreground");t&&(this.titleElement.style.color=t)}updateLegendTheme(){if(!this.legendElement)return;const t=this.themeManager.getColor("background"),e=this.themeManager.getColor("foreground"),s=this.themeManager.getCurrentTheme();if(t&&(this.legendElement.style.backgroundColor=t,"dark"===s.name||"default"===s.name?this.legendElement.style.boxShadow="0 4px 12px rgba(255, 255, 255, 0.1)":this.legendElement.style.boxShadow="0 4px 12px rgba(0, 0, 0, 0.15)"),e){const t=this.legendElement.querySelector(".graph-network-legend-header");t&&t instanceof HTMLElement&&(t.style.color=e);const s=this.legendElement.querySelector(".graph-network-legend-toggle");s&&s instanceof HTMLElement&&(s.style.color=e,s.style.borderColor=e),this.legendElement.querySelectorAll(".graph-network-legend-item span").forEach(t=>{t instanceof HTMLElement&&(t.style.color=e)})}}createBreadcrumbs(){this.config.showBreadcrumbs&&(this.breadcrumbsElement=document.createElement("div"),this.setElementClass(this.breadcrumbsElement,"graph-network-breadcrumbs"),this.container.appendChild(this.breadcrumbsElement))}generateLegendItems(t){const e=new Set,s=new Map;return t.forEach(t=>{const i=t.getType();if(i&&!e.has(i)){e.add(i);const n=this.themeManager.getNodeStyle(i);s.set(i,{type:i,shape:t.getShape(),color:this.getNodeTypeColor(i),stroke:n.stroke,strokeWidth:n.strokeWidth?.toString()})}}),Array.from(s.values())}getNodeTypeColor(t){const e=this.themeManager.getNodeStyle(t);return e.fill?e.fill:this.themeManager.getColor("primary")||"#666666"}createLegend(t=[]){if(this.config.showLegend){if(!this.legendElement){this.legendElement=document.createElement("div"),this.setElementClass(this.legendElement,"graph-network-legend");const t=document.createElement("div");this.setElementClass(t,"graph-network-legend-header"),t.textContent="Node Types";const e=document.createElement("button");this.setElementClass(e,"graph-network-legend-toggle"),e.textContent="âˆ’",e.addEventListener("click",()=>this.toggleLegend()),t.appendChild(e),this.legendElement.appendChild(t);const s=document.createElement("div");this.setElementClass(s,"graph-network-legend-content"),this.legendElement.appendChild(s),this.container.appendChild(this.legendElement),this.updateLegendTheme()}this.updateLegend(t)}}updateLegend(t){if(!this.legendElement)return;const e=this.legendElement.querySelector(".graph-network-legend-content");if(!e)return;const s=this.generateLegendItems(t);e.innerHTML="",s.forEach(t=>{const s=document.createElement("div");this.setElementClass(s,"graph-network-legend-item");const i=document.createElement("div");if(this.setElementClass(i,`graph-network-legend-shape graph-network-legend-${t.shape}`),i.style.backgroundColor=t.color,t.stroke){const e=t.strokeWidth?`${t.strokeWidth}px`:"2px";i.style.border=`${e} solid ${t.stroke}`}else{const t=this.themeManager.getColor("foreground")||"#666666";i.style.border=`2px solid ${t}`}const n=document.createElement("span");n.textContent=t.type.replace(/_/g," ").replace(/\b\w/g,t=>t.toUpperCase());const r=this.themeManager.getColor("foreground");r&&(n.style.color=r),s.appendChild(i),s.appendChild(n),e.appendChild(s)})}toggleLegend(){if(!this.legendElement)return;const t=this.legendElement.querySelector(".graph-network-legend-toggle");this.legendElement.classList.contains("minimized")?(this.legendElement.classList.remove("minimized"),t&&(t.textContent="âˆ’")):(this.legendElement.classList.add("minimized"),t&&(t.textContent="+"))}createControls(){this.config.showControls&&(this.controls=document.createElement("div"),this.setElementClass(this.controls,"graph-network-controls"),this.mobileControls=document.createElement("div"),this.setElementClass(this.mobileControls,"graph-network-mobile-controls"),this.createZoomButtons(),this.createUtilityButtons(),this.controls.appendChild(this.mobileControls),this.themeToggle&&this.controls.appendChild(this.themeToggle),this.settingsToggle&&this.controls.appendChild(this.settingsToggle),this.container.appendChild(this.controls))}createZoomButtons(){this.mobileControls&&(this.zoomInButton=document.createElement("button"),this.setElementClass(this.zoomInButton,"graph-network-zoom-button graph-network-zoom-in"),this.zoomInButton.textContent="+",this.zoomInButton.setAttribute("aria-label","Zoom in"),this.zoomInButton.addEventListener("click",()=>{this.callbacks.onZoomIn?.()}),this.zoomOutButton=document.createElement("button"),this.setElementClass(this.zoomOutButton,"graph-network-zoom-button graph-network-zoom-out"),this.zoomOutButton.textContent="âˆ’",this.zoomOutButton.setAttribute("aria-label","Zoom out"),this.zoomOutButton.addEventListener("click",()=>{this.callbacks.onZoomOut?.()}),this.resetButton=document.createElement("button"),this.setElementClass(this.resetButton,"graph-network-reset-view-button"),this.resetButton.textContent="âŠ™",this.resetButton.addEventListener("click",()=>{this.callbacks.onResetView?.()}),this.mobileControls.appendChild(this.zoomInButton),this.mobileControls.appendChild(this.zoomOutButton),this.mobileControls.appendChild(this.resetButton))}createUtilityButtons(){this.themeToggle=document.createElement("button"),this.setElementClass(this.themeToggle,"graph-network-theme-toggle"),this.themeToggle.textContent="light"===this.config.theme?"ðŸŒ™":"ðŸŒž",this.themeToggle.setAttribute("aria-label","Toggle theme"),this.themeToggle.addEventListener("click",()=>{this.callbacks.onToggleTheme?.()}),this.settingsToggle=document.createElement("button"),this.setElementClass(this.settingsToggle,"graph-network-settings-toggle"),this.settingsToggle.textContent="^",this.settingsToggle.addEventListener("click",()=>this.toggleSettings())}createSettingsPanel(){if(!this.config.showControls)return;this.settingsPanel=document.createElement("div"),this.setElementClass(this.settingsPanel,"graph-network-settings");const t=document.createElement("h3");t.textContent="Physics Settings",this.settingsPanel.appendChild(t),this.createPhysicsControls(),this.settingsPanel.addEventListener("click",t=>{t.stopPropagation()}),this.container.appendChild(this.settingsPanel)}createPhysicsControls(){this.settingsPanel&&[{key:"damping",label:"Damping",min:0,max:20,step:.5,value:10,description:"Velocity decay factor"},{key:"repulsionStrength",label:"Repulsion",min:0,max:20,step:.5,value:13,description:"Node repulsion force"},{key:"attractionStrength",label:"Attraction",min:0,max:20,step:.1,value:10,description:"Link attraction force"},{key:"groupingStrength",label:"Grouping",min:0,max:20,step:.5,value:10,description:"Same-type grouping force"},{key:"filterDepth",label:"Filter Depth",min:1,max:5,step:1,value:1,description:"Connection levels to show when filtering"}].forEach(t=>{const e=document.createElement("div");this.setElementClass(e,"graph-network-control");const s=document.createElement("label");s.textContent=t.label;const i=document.createElement("input");i.type="range",i.min=t.min.toString(),i.max=t.max.toString(),i.step=t.step.toString(),i.value=t.value.toString();const n=document.createElement("span");this.setElementClass(n,"graph-network-control-value"),n.textContent=t.value.toFixed(1),i.addEventListener("input",e=>{const s=e.target,i=parseFloat(s.value),r=this.convertUserValueToPhysics(t.key,i);n.textContent=i.toFixed(1),this.callbacks.onConfigChange?.(t.key,r)}),e.appendChild(s),e.appendChild(i),e.appendChild(n),this.settingsPanel.appendChild(e)})}toggleSettings(){this.settingsPanel&&this.settingsToggle&&(this.settingsVisible=!this.settingsVisible,this.settingsVisible?this.settingsPanel.classList.add("is-open"):this.settingsPanel.classList.remove("is-open"),this.settingsToggle.textContent=this.settingsVisible?"v":"^")}closeSettings(){this.settingsPanel&&this.settingsVisible&&(this.settingsVisible=!1,this.settingsPanel.classList.remove("is-open"),this.settingsToggle&&(this.settingsToggle.textContent="^"))}updateThemeToggle(t){this.themeToggle&&(this.themeToggle.textContent="light"===t?"ðŸŒ™":"ðŸŒž")}renderBreadcrumbs(t){this.breadcrumbsElement&&(this.breadcrumbsElement.innerHTML="",t.forEach((e,s)=>{if(s>0){const t=document.createElement("span");this.setElementClass(t,"graph-network-breadcrumb-separator"),t.textContent=" > ",this.breadcrumbsElement.appendChild(t)}const i=document.createElement("span");this.setElementClass(i,"graph-network-breadcrumb"),s===t.length-1&&i.classList.add("active"),i.textContent=e.name,e.action&&i.setAttribute("data-action",e.action),i.addEventListener("click",()=>{e.action&&this.callbacks.onBreadcrumbClick?.(e.action)}),this.breadcrumbsElement.appendChild(i)}))}convertUserValueToPhysics(t,e){const s=parseFloat(e.toString());switch(t){case"damping":if(0===s)return 1;{const t=s/20;return Math.exp(Math.log(1)*(1-t)+Math.log(.35)*t)}case"repulsionStrength":return 500*s;case"attractionStrength":case"groupingStrength":return s/1e4;case"filterDepth":return parseInt(s.toString());default:return s}}updateConfig(t){Object.assign(this.config,t)}getUIElements(){return{container:this.container,titleElement:this.titleElement||void 0,legendElement:this.legendElement||void 0,controls:this.controls||void 0,settingsPanel:this.settingsPanel||void 0}}getConfig(){return{...this.config}}isSettingsVisible(){return this.settingsVisible}setElementEnabled(t,e){switch(t){case"zoom":this.zoomInButton&&(this.zoomInButton.disabled=!e),this.zoomOutButton&&(this.zoomOutButton.disabled=!e);break;case"reset":this.resetButton&&(this.resetButton.disabled=!e);break;case"theme":this.themeToggle&&(this.themeToggle.disabled=!e);break;case"settings":this.settingsToggle&&(this.settingsToggle.disabled=!e)}}updateTitle(t){this.titleElement&&(this.titleElement.textContent=t),this.config.title=t}toObject(){return{config:this.config,settingsVisible:this.settingsVisible,elementCounts:{title:null!==this.titleElement,breadcrumbs:null!==this.breadcrumbsElement,legend:null!==this.legendElement,controls:null!==this.controls,settingsPanel:null!==this.settingsPanel},type:"UIManager",version:"2.0.0"}}updateThemeColors(t){this.updateTitleTheme(),this.updateLegendTheme(),t&&this.legendElement&&this.updateLegend(t)}destroy(){[this.titleElement,this.breadcrumbsElement,this.legendElement,this.controls,this.settingsPanel].forEach(t=>{t&&t.parentNode&&t.parentNode.removeChild(t)}),this.titleElement=null,this.breadcrumbsElement=null,this.legendElement=null,this.controls=null,this.settingsPanel=null,this.mobileControls=null,this.zoomInButton=null,this.zoomOutButton=null,this.resetButton=null,this.themeToggle=null,this.settingsToggle=null}toString(){return`UIManager(container: ${this.container.id||"unnamed"}, theme: ${this.config.theme})`}}class a{createSVGElement(t){return document.createElementNS("http://www.w3.org/2000/svg",t)}applyCommonAttributes(t,e){t.classList.add("node","node-shape"),t.setAttribute("data-id",e.getId());const s=e.getType();s&&(t.classList.add(`node-${s}`),t.setAttribute("data-type",s))}}class h extends a{supportsShape(t){return"circle"===t}createShape(t){const e=this.createSVGElement("circle");return e.setAttribute("r",t.size.toString()),this.applyCommonAttributes(e,t),{shapeElement:e}}}class l extends a{supportsShape(t){return"rectangle"===t}createShape(t){const e=this.calculateRectangleDimensions(t),s=this.createRectangleElement(e),i=this.createHiddenIndicator(e);return t.dynamicWidth=e.width,t.dynamicHeight=e.height,this.applyCommonAttributes(s,t),{shapeElement:s,hiddenIndicator:i}}calculateRectangleDimensions(t){const e=this.measureTextWidth(t.getName()),s=2*t.size;return{width:Math.max(s,e+20),height:1.4*t.size}}createRectangleElement(t){const e=this.createSVGElement("rect");return e.setAttribute("x",(-t.width/2).toString()),e.setAttribute("y",(-t.height/2).toString()),e.setAttribute("width",t.width.toString()),e.setAttribute("height",t.height.toString()),e.setAttribute("rx","5"),e}createHiddenIndicator(t){const e=this.createSVGElement("rect");return e.setAttribute("x",(-(t.width+4)/2).toString()),e.setAttribute("y",(-(t.height+4)/2).toString()),e.setAttribute("width",(t.width+4).toString()),e.setAttribute("height",(t.height+4).toString()),e.setAttribute("rx","5"),e.classList.add("hidden-connection-indicator"),e.style.display="none",e}measureTextWidth(t){const e=this.createSVGElement("text");e.textContent=t,e.style.visibility="hidden",e.style.position="absolute",document.body.appendChild(e);const s=e.getBBox().width;return document.body.removeChild(e),s||8*t.length}}class d extends a{supportsShape(t){return"square"===t}createShape(t){const e=1.4*t.size,s=this.createSVGElement("rect");return s.setAttribute("x",(-e/2).toString()),s.setAttribute("y",(-e/2).toString()),s.setAttribute("width",e.toString()),s.setAttribute("height",e.toString()),s.setAttribute("rx","5"),this.applyCommonAttributes(s,t),{shapeElement:s}}}class c extends a{supportsShape(t){return"triangle"===t}createShape(t){const e=1.4*t.size,s=e*Math.sqrt(3)/2,i=this.calculateTrianglePoints(e,s),n=this.createSVGElement("polygon");return n.setAttribute("points",i),this.applyCommonAttributes(n,t),{shapeElement:n}}calculateTrianglePoints(t,e){return[[0,-e/2],[-t/2,e/2],[t/2,e/2]].map(t=>t.join(",")).join(" ")}}class g{constructor(){this.creators=new Map,this.registerCreator(new h),this.registerCreator(new l),this.registerCreator(new d),this.registerCreator(new c),this.defaultCreator=new h}createShape(t){const e=t.getShape();return(this.creators.get(e)||this.defaultCreator).createShape(t)}registerCreator(t){const e=["circle","rectangle","square","triangle"];for(const s of e)t.supportsShape(s)&&this.creators.set(s,t)}supportsShape(t){return this.creators.has(t)||"circle"===t}getSupportedShapes(){return Array.from(this.creators.keys())}setDefaultCreator(t){this.defaultCreator=t}}!function(t){t[t.ERROR=0]="ERROR",t[t.WARN=1]="WARN",t[t.INFO=2]="INFO",t[t.DEBUG=3]="DEBUG"}(t||(t={}));class u{constructor(t={}){this.module=t.module||"App",this.level=t.level??u.globalLevel,this.enableTimestamp=t.enableTimestamp??!1,this.enabled=t.enabled??u.globalEnabled}static setGlobalLevel(t){u.globalLevel=t}static setGlobalEnabled(t){u.globalEnabled=t}static getGlobalLevel(){return u.globalLevel}shouldLog(t){return this.enabled&&u.globalEnabled&&t<=this.level}formatMessage(t,e,...s){return[`${this.enableTimestamp?`[${(new Date).toISOString()}] `:""}[${this.module}] ${t}:`,e,...s]}error(e,...s){this.shouldLog(t.ERROR)&&console.error(...this.formatMessage("ERROR",e,...s))}warn(e,...s){this.shouldLog(t.WARN)&&console.warn(...this.formatMessage("WARN",e,...s))}info(e,...s){this.shouldLog(t.INFO)&&console.info(...this.formatMessage("INFO",e,...s))}debug(e,...s){this.shouldLog(t.DEBUG)&&console.log(...this.formatMessage("DEBUG",e,...s))}setLevel(t){this.level=t}setEnabled(t){this.enabled=t}getLevel(){return this.level}isEnabled(){return this.enabled}}function m(t,e={}){return new u({...e,module:t})}u.globalLevel=t.INFO,u.globalEnabled=!0,new u({module:"App"});class p{constructor(t,e,s,i={}){this.logger=m("SVGRenderer"),this.canvas=null,this.svg=null,this.transformGroup=null,this.linkGroup=null,this.nodeGroup=null,this.labelGroup=null,this.nodeElements=new Map,this.linkElements=new Map,this.transformState={x:0,y:0,scale:1},this.textCanvas=null,this.textContext=null,this.container=t,this.containerId=e,this.themeManager=s,this.shapeFactory=new g,this.config={showLabels:!0,animationDuration:300,fontFamily:"Arial",fontSize:14,debug:!1,...i}}initialize(){this.createSVGContainer(),this.setupTextMeasurement()}createSVGContainer(){const t=this.container.querySelector(".graph-network-canvas");t&&t.remove();const e=this.container.getBoundingClientRect(),s=e.width,i=e.height;this.canvas=document.createElement("div"),this.canvas.className="graph-network-canvas",this.container.appendChild(this.canvas),this.svg=document.createElementNS("http://www.w3.org/2000/svg","svg"),this.svg.setAttribute("width",s.toString()),this.svg.setAttribute("height",i.toString()),this.svg.style.display="block",this.svg.style.backgroundColor="var(--bg-primary)",this.transformGroup=document.createElementNS("http://www.w3.org/2000/svg","g"),this.transformGroup.classList.add("transform-group"),this.linkGroup=document.createElementNS("http://www.w3.org/2000/svg","g"),this.linkGroup.classList.add("links"),this.labelGroup=document.createElementNS("http://www.w3.org/2000/svg","g"),this.labelGroup.classList.add("edge-labels"),this.nodeGroup=document.createElementNS("http://www.w3.org/2000/svg","g"),this.nodeGroup.classList.add("nodes"),this.transformGroup.appendChild(this.linkGroup),this.transformGroup.appendChild(this.labelGroup),this.transformGroup.appendChild(this.nodeGroup),this.svg.appendChild(this.transformGroup),this.createArrowMarker(),this.canvas.appendChild(this.svg)}createArrowMarker(){if(!this.svg)return;const t=document.createElementNS("http://www.w3.org/2000/svg","defs"),e=document.createElementNS("http://www.w3.org/2000/svg","marker");e.setAttribute("id",`arrowhead-${this.containerId}`),e.setAttribute("viewBox","0 -5 10 10"),e.setAttribute("refX","8"),e.setAttribute("refY","0"),e.setAttribute("orient","auto"),e.setAttribute("markerUnits","strokeWidth");const s=document.createElementNS("http://www.w3.org/2000/svg","path");s.setAttribute("d","M0,-5L10,0L0,5"),s.setAttribute("fill","#5a5a5a"),e.appendChild(s),t.appendChild(e),this.svg.appendChild(t)}setupTextMeasurement(){this.textCanvas=document.createElement("canvas"),this.textContext=this.textCanvas.getContext("2d"),this.textContext&&(this.textContext.font=`${this.config.fontSize}px ${this.config.fontFamily}`)}measureTextWidth(t){return this.textContext?this.textContext.measureText(t).width:8*t.length}createElements(t,e){this.linkGroup&&this.labelGroup&&this.nodeGroup||this.createSVGContainer(),this.clearElements(),this.applyCanvasTheming(),this.createLinkElements(e),this.createNodeElements(t)}createLinkElements(t){this.linkGroup&&this.labelGroup&&t.forEach(t=>{const e=document.createElementNS("http://www.w3.org/2000/svg","line");e.classList.add("link"),e.setAttribute("marker-end",`url(#arrowhead-${this.containerId})`),e.setAttribute("data-id",`${t.source.getId()}-${t.target.getId()}`),this.applyEdgeStyles(e,t.line_type||"default",`${t.source.getId()}-${t.target.getId()}`),t.weight&&(e.style.strokeWidth=`${t.weight}px`),"dashed"===t.line_type?e.style.strokeDasharray="5, 5":"dotted"===t.line_type&&(e.style.strokeDasharray="2, 2"),this.linkGroup.appendChild(e);const s=document.createElementNS("http://www.w3.org/2000/svg","rect");s.classList.add("edge-label-background"),this.labelGroup.appendChild(s);const i=document.createElementNS("http://www.w3.org/2000/svg","text");i.textContent=t.label||"",i.classList.add("edge-label-text");const n=this.themeManager.getColor("foreground"),r=this.themeManager.getColor("background");n&&(i.style.fill=n),r&&(s.style.fill=r),this.labelGroup.appendChild(i),this.linkElements.set(t,{linkEl:e,labelText:i,labelBackground:s})})}createNodeElements(t){this.nodeGroup&&Array.from(t.values()).forEach(t=>{const e=document.createElementNS("http://www.w3.org/2000/svg","g");e.setAttribute("data-id",t.getId());const{shapeElement:s,hiddenIndicator:i}=this.createNodeShape(t),n=this.createNodeText(t);this.applyNodeStyles(s,t.data.type||"default",t.getId());const r=this.themeManager.getColor("foreground");r&&(n.style.fill=r),i&&e.appendChild(i),e.appendChild(s),e.appendChild(n),this.nodeGroup.appendChild(e),this.nodeElements.set(t,{group:e,shape:s,text:n,hiddenIndicator:i})})}createNodeShape(t){const e=this.shapeFactory.createShape(t),s=t.getType();return this.applyNodeStyles(e.shapeElement,s||"default",t.getId()),e}createNodeText(t){const e=document.createElementNS("http://www.w3.org/2000/svg","text");return e.textContent=t.getName(),e.classList.add("node-label"),e.setAttribute("text-anchor","middle"),e.setAttribute("dominant-baseline","central"),e}applyNodeStyles(t,e,s){const i=this.themeManager.getElementStates(s),n=this.themeManager.getNodeStyle(e,i);Object.entries(n).forEach(([e,s])=>{void 0!==s&&t.setAttribute(e,String(s))})}applyEdgeStyles(t,e,s){const i=this.themeManager.getElementStates(s),n=this.themeManager.getEdgeStyle(e,i);Object.entries(n).forEach(([e,s])=>{void 0!==s&&t.setAttribute(e,String(s))})}applyCanvasTheming(){const t=this.themeManager.getCanvasConfig();if(this.svg)if(t.background&&(this.svg.style.backgroundColor=t.background),t.showGrid&&t.gridColor&&t.gridSize){const e=t.gridSize,s=t.gridColor,i=`linear-gradient(${s} 1px, transparent 1px), linear-gradient(90deg, ${s} 1px, transparent 1px)`;this.svg.style.backgroundImage=i,this.svg.style.backgroundSize=`${e}px ${e}px`,this.logger.debug(`Applied grid pattern: ${s} at ${e}px for theme: ${this.themeManager.getCurrentTheme().name}`)}else this.svg.style.backgroundImage="",this.svg.style.backgroundSize=""}updateElementState(t,e,s){this.themeManager.setElementState(t,e,s);const i=this.svg?.querySelector(`[data-id="${t}"]`);if(i){const e=i.classList.contains("node-shape"),s=i.classList.contains("link");if(e){const e=i.getAttribute("data-type")||"default";this.applyNodeStyles(i,e,t)}else if(s){const e=i.getAttribute("data-type")||"default";this.applyEdgeStyles(i,e,t)}}}getThemeManager(){return this.themeManager}render(t,e,s=null){this.transformGroup&&(this.transformGroup.style.transform=`translate(${this.transformState.x}px, ${this.transformState.y}px) scale(${this.transformState.scale})`),this.updateBackgroundTransform(),this.updateLinkPositions(e,s),this.updateNodePositions(t,s)}updateLinkPositions(t,e=null){t.forEach(t=>{const s=this.linkElements.get(t);if(!s)return;const i=!e||e.has(t.source.getId())&&e.has(t.target.getId());s.linkEl.style.opacity=i?"1":"0.1",s.labelText.style.opacity=i?"1":"0.1",s.labelBackground.style.opacity=i?"1":"0.1";const n=t.source.position,r=t.target.position,o=r.subtract(n),a=o.magnitude();let h=r.x,l=r.y;if("rectangle"===t.target.getShape()&&a>0){const e=(t.target.dynamicWidth||2.8*t.target.size)/2,s=(t.target.dynamicHeight||1.4*t.target.size)/2,i=Math.atan2(o.y,o.x),n=Math.abs(i);let a=e,d=s;n>Math.atan2(s,e)&&n<Math.PI-Math.atan2(s,e)?a=s/Math.tan(n):d=e*Math.tan(n),h=r.x-a*Math.sign(o.x),l=r.y-d*Math.sign(o.y)}else if("circle"===t.target.getShape()&&a>t.target.size){const e=(a-t.target.size)/a;h=n.x+o.x*e,l=n.y+o.y*e}if(s.linkEl.setAttribute("x1",n.x.toString()),s.linkEl.setAttribute("y1",n.y.toString()),s.linkEl.setAttribute("x2",h.toString()),s.linkEl.setAttribute("y2",l.toString()),this.config.showLabels&&s.labelText.textContent){const t=(n.x+h)/2,e=(n.y+l)/2;s.labelText.setAttribute("x",t.toString()),s.labelText.setAttribute("y",e.toString()),this.updateLabelBackground(s.labelText,s.labelBackground)}})}updateLabelBackground(t,e){if(e&&t.textContent)try{const s=t.getBBox(),i=4;e.setAttribute("x",(s.x-i).toString()),e.setAttribute("y",(s.y-i).toString()),e.setAttribute("width",(s.width+2*i).toString()),e.setAttribute("height",(s.height+2*i).toString())}catch(t){this.config.debug&&this.logger.warn("Could not get text bounding box:",t)}}updateNodePositions(t,e=null){Array.from(t.values()).forEach(t=>{const s=this.nodeElements.get(t);if(s){s.group.setAttribute("transform",`translate(${t.position.x},${t.position.y})`);const i=!e||e.has(t.getId());if(s.group.style.opacity=i?"1":"0.1",s.hiddenIndicator){const i=e&&!e.has(t.getId());s.hiddenIndicator.style.display=i?"block":"none"}}})}setTransform(t,e,s){this.transformState.x=t,this.transformState.y=e,this.transformState.scale=s}getTransform(){return{...this.transformState}}resize(t,e){this.svg&&(this.svg.setAttribute("width",t.toString()),this.svg.setAttribute("height",e.toString()))}clearElements(){this.linkGroup&&(this.linkGroup.innerHTML=""),this.labelGroup&&(this.labelGroup.innerHTML=""),this.nodeGroup&&(this.nodeGroup.innerHTML=""),this.nodeElements.clear(),this.linkElements.clear()}getSVGElement(){return this.svg}getSVGElements(){return this.svg&&this.transformGroup&&this.linkGroup&&this.nodeGroup&&this.labelGroup?{svg:this.svg,transformGroup:this.transformGroup,linkGroup:this.linkGroup,nodeGroup:this.nodeGroup,labelGroup:this.labelGroup}:null}getNodeElements(){return this.nodeElements}getLinkElements(){return this.linkElements}getBounds(t,e=null){const s=Array.from(t.values()),i=e?s.filter(t=>e.has(t.getId())):s;if(0===i.length)return{x:0,y:0,width:0,height:0};let n=1/0,r=1/0,o=-1/0,a=-1/0;return i.forEach(t=>{const e=t.getEffectiveRadius();n=Math.min(n,t.position.x-e),r=Math.min(r,t.position.y-e),o=Math.max(o,t.position.x+e),a=Math.max(a,t.position.y+e)}),{x:n,y:r,width:o-n,height:a-r}}screenToSVG(t,e){if(!this.svg)return new i(t,e);const s=this.svg.getBoundingClientRect(),n=(t-s.left-this.transformState.x)/this.transformState.scale,r=(e-s.top-this.transformState.y)/this.transformState.scale;return new i(n,r)}svgToScreen(t,e){if(!this.svg)return new i(t,e);const s=this.svg.getBoundingClientRect(),n=t*this.transformState.scale+this.transformState.x+s.left,r=e*this.transformState.scale+this.transformState.y+s.top;return new i(n,r)}static createRenderLink(t,e){const s=e.get(t.source),i=e.get(t.target);return s&&i?{source:s,target:i,data:t,label:t.label,weight:t.weight,line_type:t.line_type}:null}static createRenderLinks(t,e){return t.map(t=>p.createRenderLink(t,e)).filter(t=>null!==t)}toObject(){return{config:this.config,transformState:this.transformState,elementCounts:{nodes:this.nodeElements.size,links:this.linkElements.size},type:"SVGRenderer",version:"2.0.0"}}destroy(){this.canvas&&this.canvas.parentNode&&this.canvas.parentNode.removeChild(this.canvas),this.clearElements(),this.canvas=null,this.svg=null,this.transformGroup=null,this.linkGroup=null,this.nodeGroup=null,this.labelGroup=null,this.textCanvas=null,this.textContext=null}updateBackgroundTransform(){if(!this.svg)return;const t=this.themeManager.getCanvasConfig();if(!t.syncBackgroundTransform||!t.showGrid)return;const{scale:e,x:s,y:i}=this.transformState,n=s*e,r=i*e,o=(t.gridSize||20)*e;this.svg.style.backgroundPosition=`${n}px ${r}px`,this.svg.style.backgroundSize=`${o}px ${o}px`}toString(){return`SVGRenderer(container: ${this.containerId}, nodes: ${this.nodeElements.size}, links: ${this.linkElements.size})`}}class f{constructor(t={}){this.eventCallbacks=new Map,this.logger=m("EventManager"),this.svg=null,this.nodes=null,this.callbacks={},this.config={zoomSensitivity:1.01,filterDepth:1,...t},this.interactionState={isDragging:!1,isPanning:!1,isPinching:!1,dragNode:null,wasNodeFixed:!1,lastMouseX:0,lastMouseY:0,lastTouchTime:0,touchStartTime:0,lastTouchEndTime:0,touchTarget:null,dragStartPosition:null,lastPinchDistance:0,lastPinchCenterX:0,lastPinchCenterY:0,lastTouchX:0,lastTouchY:0},this.transformState={x:0,y:0,scale:1}}initialize(t,e,s={}){this.svg=t,this.nodes=e,this.callbacks=s,this.setupEventListeners()}setupEventListeners(){this.svg&&(this.setupNodeEventListeners(),this.svg.addEventListener("mousedown",t=>this.handleSvgMouseDown(t)),this.svg.addEventListener("mousemove",t=>this.handleSvgMouseMove(t)),this.svg.addEventListener("mouseup",()=>this.handleSvgMouseUp()),this.svg.addEventListener("dblclick",t=>this.handleSvgDoubleClick(t)),this.svg.addEventListener("wheel",t=>this.handleWheel(t)),this.svg.addEventListener("touchstart",t=>this.handleTouchStart(t),{passive:!1}),this.svg.addEventListener("touchmove",t=>this.handleTouchMove(t),{passive:!1}),this.svg.addEventListener("touchend",t=>this.handleTouchEnd(t),{passive:!1}),this.svg.addEventListener("touchcancel",t=>this.handleTouchEnd(t),{passive:!1}),window.addEventListener("resize",()=>this.handleResize()))}setupNodeEventListeners(){if(!this.nodes||!this.callbacks.getNodeElements)return;const t=this.callbacks.getNodeElements();this.nodes.forEach(e=>{const s=t.get(e);s&&(s.group.addEventListener("mousedown",t=>{this.handleNodeMouseDown(t,e)}),s.group.addEventListener("dblclick",t=>{this.handleNodeDoubleClick(t,e)}),s.group.addEventListener("touchstart",t=>{this.handleNodeTouchStart(t,e)}))})}handleNodeMouseDown(t,e){t.preventDefault(),this.interactionState.isDragging=!0,this.interactionState.dragNode=e,this.interactionState.wasNodeFixed=e.isFixed,this.callbacks.fixNode?.(e),this.emit("nodeMouseDown",{node:e,event:t,position:{x:t.clientX,y:t.clientY}})}handleNodeDoubleClick(t,e){t.preventDefault(),t.stopPropagation(),this.callbacks.filterByNode?.(e.getId()),this.emit("nodeDoubleClick",{node:e,event:t,position:{x:t.clientX,y:t.clientY}})}handleSvgMouseDown(t){this.interactionState.isDragging||(this.callbacks.closeSettings?.(),this.interactionState.isPanning=!0,this.interactionState.lastMouseX=t.clientX,this.interactionState.lastMouseY=t.clientY)}handleSvgDoubleClick(t){t.preventDefault(),this.callbacks.resetFilter?.(),this.emit("backgroundDoubleClick",{event:t,position:{x:t.clientX,y:t.clientY}})}handleSvgMouseMove(t){this.interactionState.isDragging&&this.interactionState.dragNode?this.handleNodeDrag(t):this.interactionState.isPanning&&this.handlePan(t)}handleNodeDrag(t){if(!this.svg||!this.interactionState.dragNode)return;const e=this.svg.getBoundingClientRect(),s=(t.clientX-e.left-this.transformState.x)/this.transformState.scale,n=(t.clientY-e.top-this.transformState.y)/this.transformState.scale,r=this.interactionState.dragNode.position.clone();this.interactionState.dragNode.position.x=s,this.interactionState.dragNode.position.y=n,this.callbacks.showTooltip?.(this.interactionState.dragNode,{x:t.clientX+10,y:t.clientY+10}),this.emit("nodeDrag",{node:this.interactionState.dragNode,position:{x:s,y:n},startPosition:this.interactionState.dragStartPosition||{x:r.x,y:r.y},delta:new i(s-r.x,n-r.y)})}handlePan(t){const e=t.clientX-this.interactionState.lastMouseX,s=t.clientY-this.interactionState.lastMouseY;this.transformState.x+=e,this.transformState.y+=s,this.callbacks.updateTransform?.(this.transformState.x,this.transformState.y,this.transformState.scale),this.interactionState.lastMouseX=t.clientX,this.interactionState.lastMouseY=t.clientY,this.emit("pan",{x:this.transformState.x,y:this.transformState.y,deltaX:e,deltaY:s})}handleSvgMouseUp(){this.interactionState.isDragging&&this.interactionState.dragNode&&(this.interactionState.wasNodeFixed||this.callbacks.unfixNode?.(this.interactionState.dragNode)),this.interactionState.isDragging=!1,this.interactionState.dragNode=null,this.interactionState.isPanning=!1,this.interactionState.wasNodeFixed=!1,this.interactionState.dragStartPosition=null,this.callbacks.hideTooltip?.()}handleWheel(t){if(t.preventDefault(),!this.svg)return;const e=this.svg.getBoundingClientRect(),s=t.clientX-e.left,i=t.clientY-e.top,n=t.deltaY>0?1/this.config.zoomSensitivity:this.config.zoomSensitivity,r=Math.max(.2,Math.min(2,this.transformState.scale*n)),o=r/this.transformState.scale;this.transformState.x=s-(s-this.transformState.x)*o,this.transformState.y=i-(i-this.transformState.y)*o,this.transformState.scale=r,this.callbacks.updateTransform?.(this.transformState.x,this.transformState.y,this.transformState.scale),this.emit("zoom",{scale:this.transformState.scale,x:this.transformState.x,y:this.transformState.y,delta:n,center:{x:s,y:i}})}handleTouchStart(t){t.preventDefault(),this.interactionState.touchStartTime=Date.now();const e=t.touches;if(1===e.length){const t=e[0];this.interactionState.lastTouchX=t.clientX,this.interactionState.lastTouchY=t.clientY;const s=document.elementFromPoint(t.clientX,t.clientY),i=s?.closest("g[data-id]");if(i){const t=i.getAttribute("data-id"),e=this.nodes?.get(t||"");e&&(this.interactionState.touchTarget={type:"node",node:e,element:i})}else this.callbacks.closeSettings?.(),this.interactionState.touchTarget={type:"background"},this.interactionState.isPanning=!0}else if(2===e.length){this.interactionState.isPinching=!0,this.interactionState.isPanning=!1;const t=e[0],s=e[1];this.interactionState.lastPinchDistance=Math.sqrt(Math.pow(s.clientX-t.clientX,2)+Math.pow(s.clientY-t.clientY,2)),this.interactionState.lastPinchCenterX=(t.clientX+s.clientX)/2,this.interactionState.lastPinchCenterY=(t.clientY+s.clientY)/2}}handleNodeTouchStart(t,e){t.preventDefault(),t.touches.length>1||(this.interactionState.isDragging=!0,this.interactionState.dragNode=e,this.interactionState.wasNodeFixed=e.isFixed,this.callbacks.fixNode?.(e),this.interactionState.dragStartPosition={x:e.position.x,y:e.position.y})}handleTouchMove(t){t.preventDefault();const e=t.touches,s=this.getTouchMoveHandler(e);s?.(e)}getTouchMoveHandler(t){return 1===t.length&&this.interactionState.isDragging&&this.interactionState.dragNode?t=>this.handleTouchNodeDrag(t[0]):1===t.length&&this.interactionState.isPanning?t=>this.handleTouchPan(t[0]):2===t.length&&this.interactionState.isPinching?t=>this.handleTouchPinch(t):null}handleTouchNodeDrag(t){if(!this.svg||!this.interactionState.dragNode)return;const e=this.svg.getBoundingClientRect(),s=(t.clientX-e.left-this.transformState.x)/this.transformState.scale,n=(t.clientY-e.top-this.transformState.y)/this.transformState.scale,r=this.interactionState.dragNode.position.clone();this.interactionState.dragNode.position.x=s,this.interactionState.dragNode.position.y=n,this.callbacks.showTooltip?.(this.interactionState.dragNode,{x:t.clientX+10,y:t.clientY+10}),this.emit("nodeDrag",{node:this.interactionState.dragNode,position:{x:s,y:n},startPosition:this.interactionState.dragStartPosition||{x:r.x,y:r.y},delta:new i(s-r.x,n-r.y)})}handleTouchPan(t){const e=t.clientX-this.interactionState.lastTouchX,s=t.clientY-this.interactionState.lastTouchY;this.transformState.x+=e,this.transformState.y+=s,this.callbacks.updateTransform?.(this.transformState.x,this.transformState.y,this.transformState.scale),this.interactionState.lastTouchX=t.clientX,this.interactionState.lastTouchY=t.clientY,this.emit("pan",{x:this.transformState.x,y:this.transformState.y,deltaX:e,deltaY:s})}handleTouchPinch(t){if(!this.svg)return;const e=t[0],s=t[1],i=Math.sqrt(Math.pow(s.clientX-e.clientX,2)+Math.pow(s.clientY-e.clientY,2)),n=(e.clientX+s.clientX)/2,r=(e.clientY+s.clientY)/2;if(this.interactionState.lastPinchDistance>0){const t=i/this.interactionState.lastPinchDistance,e=Math.max(.2,Math.min(2,this.transformState.scale*t)),s=this.svg.getBoundingClientRect(),o=n-s.left,a=r-s.top,h=e/this.transformState.scale;this.transformState.x=o-(o-this.transformState.x)*h,this.transformState.y=a-(a-this.transformState.y)*h,this.transformState.scale=e,this.callbacks.updateTransform?.(this.transformState.x,this.transformState.y,this.transformState.scale),this.emit("zoom",{scale:this.transformState.scale,x:this.transformState.x,y:this.transformState.y,delta:t,center:{x:o,y:a}})}this.interactionState.lastPinchDistance=i,this.interactionState.lastPinchCenterX=n,this.interactionState.lastPinchCenterY=r}handleTouchEnd(t){const e=Date.now();e-this.interactionState.touchStartTime<300&&e-this.interactionState.lastTouchEndTime<500&&this.handleDoubleTap(),this.interactionState.lastTouchEndTime=e,0===t.touches.length?(this.interactionState.isDragging&&this.interactionState.dragNode&&(this.interactionState.wasNodeFixed||this.callbacks.unfixNode?.(this.interactionState.dragNode)),this.interactionState.isDragging=!1,this.interactionState.dragNode=null,this.interactionState.dragStartPosition=null,this.interactionState.isPanning=!1,this.interactionState.isPinching=!1,this.interactionState.wasNodeFixed=!1,this.interactionState.touchTarget=null,this.callbacks.hideTooltip?.()):1===t.touches.length&&(this.interactionState.isPinching=!1,this.interactionState.lastPinchDistance=0)}handleDoubleTap(){"node"===this.interactionState.touchTarget?.type?(this.callbacks.filterByNode?.(this.interactionState.touchTarget.node.getId()),this.emit("nodeDoubleClick",{node:this.interactionState.touchTarget.node})):(this.callbacks.resetFilter?.(),this.emit("backgroundDoubleClick",{}))}handleResize(){this.callbacks.resize?.(),this.emit("resize",{})}setTransform(t,e,s){this.transformState.x=t,this.transformState.y=e,this.transformState.scale=s}getTransform(){return{...this.transformState}}updateConfig(t){Object.assign(this.config,t)}getConfig(){return{...this.config}}on(t,e){this.eventCallbacks.has(t)||this.eventCallbacks.set(t,[]),this.eventCallbacks.get(t).push(e)}off(t,e){if(this.eventCallbacks.has(t)){const s=this.eventCallbacks.get(t),i=s.indexOf(e);-1!==i&&s.splice(i,1)}}removeAllListeners(t){this.eventCallbacks.delete(t)}emit(t,e={}){this.eventCallbacks.has(t)&&this.eventCallbacks.get(t).forEach(s=>{try{s(e)}catch(e){this.logger.error(`Error in event callback for '${t}':`,e)}})}getRegisteredEvents(){return Array.from(this.eventCallbacks.keys())}isDragging(){return this.interactionState.isDragging}isPanning(){return this.interactionState.isPanning}isPinching(){return this.interactionState.isPinching}getDraggedNode(){return this.interactionState.dragNode}stopAllInteractions(){this.interactionState.isDragging&&this.interactionState.dragNode&&(this.interactionState.wasNodeFixed||this.callbacks.unfixNode?.(this.interactionState.dragNode)),this.interactionState.isDragging=!1,this.interactionState.dragNode=null,this.interactionState.isPanning=!1,this.interactionState.isPinching=!1,this.interactionState.wasNodeFixed=!1,this.interactionState.touchTarget=null,this.interactionState.dragStartPosition=null,this.callbacks.hideTooltip?.()}zoomTo(t,e,s,i=!1){if(!this.svg)return;const n=Math.max(.2,Math.min(2,t));if(void 0!==e&&void 0!==s){const t=this.svg.getBoundingClientRect(),i=e-t.left,r=s-t.top,o=n/this.transformState.scale;this.transformState.x=i-(i-this.transformState.x)*o,this.transformState.y=r-(r-this.transformState.y)*o}this.transformState.scale=n,this.callbacks.updateTransform?.(this.transformState.x,this.transformState.y,this.transformState.scale),this.emit("zoom",{scale:this.transformState.scale,x:this.transformState.x,y:this.transformState.y,center:e&&s?{x:e,y:s}:void 0})}panTo(t,e,s=!1){const i=t-this.transformState.x,n=e-this.transformState.y;this.transformState.x=t,this.transformState.y=e,this.callbacks.updateTransform?.(this.transformState.x,this.transformState.y,this.transformState.scale),this.emit("pan",{x:this.transformState.x,y:this.transformState.y,deltaX:i,deltaY:n})}screenToSVG(t,e){if(!this.svg)return new i(t,e);const s=this.svg.getBoundingClientRect(),n=(t-s.left-this.transformState.x)/this.transformState.scale,r=(e-s.top-this.transformState.y)/this.transformState.scale;return new i(n,r)}svgToScreen(t,e){if(!this.svg)return new i(t,e);const s=this.svg.getBoundingClientRect(),n=t*this.transformState.scale+this.transformState.x+s.left,r=e*this.transformState.scale+this.transformState.y+s.top;return new i(n,r)}updateCallbacks(t){this.callbacks={...this.callbacks,...t}}toObject(){return{config:this.config,transformState:this.transformState,interactionState:{isDragging:this.interactionState.isDragging,isPanning:this.interactionState.isPanning,isPinching:this.interactionState.isPinching,dragNodeId:this.interactionState.dragNode?.getId()||null},registeredEvents:this.getRegisteredEvents(),type:"EventManager",version:"2.0.0"}}destroy(){window.removeEventListener("resize",()=>this.handleResize()),this.eventCallbacks.clear(),this.stopAllInteractions(),this.svg=null,this.nodes=null,this.callbacks={}}toString(){return`EventManager(events: ${this.getRegisteredEvents().length}, scale: ${this.transformState.scale.toFixed(2)})`}}function y(t){return t&&"object"==typeof t&&"string"==typeof t.id&&"string"==typeof t.name}function S(t){return t&&"object"==typeof t&&"string"==typeof t.source&&"string"==typeof t.target}function w(t){return t&&"object"==typeof t&&Array.isArray(t.nodes)&&Array.isArray(t.links)&&t.nodes.every(y)&&t.links.every(S)}const b={damping:.95,repulsionStrength:6500,attractionStrength:.001,groupingStrength:.001,zoomSensitivity:1.01,filterDepth:1,showControls:!0,showLegend:!0,showTitle:!0,showBreadcrumbs:!0,theme:"dark",title:"Graph Network"};class E extends Error{constructor(t,e,s){super(t),this.name=this.constructor.name,this.code=e,this.details=s,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}}class k extends E{constructor(t,e){super(t,"NODE_VALIDATION_ERROR",{nodeData:e})}}class v extends E{constructor(t){super(`Node with id "${t}" already exists`,"NODE_EXISTS_ERROR",{nodeId:t})}}class T extends E{constructor(t){super(`Node with id "${t}" not found`,"NODE_NOT_FOUND_ERROR",{nodeId:t})}}class C extends E{constructor(t,e){super(t,"EDGE_VALIDATION_ERROR",{edgeData:e})}}class N extends E{constructor(t){super(`Edge with id "${t}" already exists`,"EDGE_EXISTS_ERROR",{edgeId:t})}}class x extends E{constructor(t){super(`Edge with id "${t}" not found`,"EDGE_NOT_FOUND_ERROR",{edgeId:t})}}class M extends E{constructor(t,e,s){super(`Edge references non-existent nodes: ${s.join(", ")}`,"INVALID_EDGE_REFERENCES_ERROR",{sourceId:t,targetId:e,missingNodeIds:s})}}class A{static isGraphError(t){return t instanceof E}static getErrorDetails(t){return this.isGraphError(t)?{name:t.name,code:t.code,message:t.message,details:t.details}:t instanceof Error?{name:t.name,message:t.message}:{error:String(t)}}static getUserMessage(t){if(this.isGraphError(t))switch(t.code){case"NODE_VALIDATION_ERROR":case"EDGE_VALIDATION_ERROR":return"Invalid data provided. Please check the required fields.";case"NODE_EXISTS_ERROR":case"EDGE_EXISTS_ERROR":return"Item already exists in the graph.";case"NODE_NOT_FOUND_ERROR":case"EDGE_NOT_FOUND_ERROR":return"Item not found in the graph.";case"INVALID_EDGE_REFERENCES_ERROR":return"Cannot create connection to non-existent nodes.";default:return t.message}return"An unexpected error occurred."}}const D={additive:!1,highlightColor:"#3b82f6",strokeWidth:3,silent:!1,animationDuration:200};class z{constructor(t,e){this.state={selectedNodes:new Set,selectedEdges:new Set,mode:"multi"},this.onSelectionChange=t,this.options={...D,...e}}selectNode(t,e){if(!t)return!1;const s={...this.options,...e},i=this.state.selectedNodes.has(t);return s.additive||"single"!==this.state.mode||this.state.selectedNodes.clear(),this.state.selectedNodes.add(t),this.state.lastSelected=t,!i&&(this.emitSelectionChange(s,[t],[],[],[]),!0)}selectNodes(t,e){const s={...this.options,...e},i=[];s.additive||this.state.selectedNodes.clear();for(const e of t)this.state.selectedNodes.has(e)||(this.state.selectedNodes.add(e),i.push(e));return i.length>0&&(this.state.lastSelected=i[i.length-1],this.emitSelectionChange(s,i,[],[],[])),i}selectEdge(t,e){const s={...this.options,...e},i=this.state.selectedEdges.has(t);return s.additive||"single"!==this.state.mode||this.state.selectedEdges.clear(),this.state.selectedEdges.add(t),!i&&(this.emitSelectionChange(s,[],[],[t],[]),!0)}selectEdges(t,e){const s={...this.options,...e},i=[];s.additive||this.state.selectedEdges.clear();for(const e of t)this.state.selectedEdges.has(e)||(this.state.selectedEdges.add(e),i.push(e));return i.length>0&&this.emitSelectionChange(s,[],[],i,[]),i}deselectNode(t){return!!this.state.selectedNodes.has(t)&&(this.state.selectedNodes.delete(t),this.emitSelectionChange(this.options,[],[t],[],[]),!0)}deselectEdge(t){return!!this.state.selectedEdges.has(t)&&(this.state.selectedEdges.delete(t),this.emitSelectionChange(this.options,[],[],[],[t]),!0)}deselectAll(){const t=Array.from(this.state.selectedNodes),e=Array.from(this.state.selectedEdges);this.state.selectedNodes.clear(),this.state.selectedEdges.clear(),this.state.lastSelected=void 0,(t.length>0||e.length>0)&&this.emitSelectionChange(this.options,[],t,[],e)}toggleNodeSelection(t){return this.state.selectedNodes.has(t)?this.deselectNode(t):this.selectNode(t,{additive:!0})}toggleEdgeSelection(t){return this.state.selectedEdges.has(t)?this.deselectEdge(t):this.selectEdge(t,{additive:!0})}isNodeSelected(t){return this.state.selectedNodes.has(t)}isEdgeSelected(t){return this.state.selectedEdges.has(t)}getSelectedNodes(){return Array.from(this.state.selectedNodes)}getSelectedEdges(){return Array.from(this.state.selectedEdges)}getSelectionState(){return{selectedNodes:new Set(this.state.selectedNodes),selectedEdges:new Set(this.state.selectedEdges),lastSelected:this.state.lastSelected,mode:this.state.mode}}clearSelection(){this.deselectAll()}setSelectionMode(t){if(this.state.mode=t,"single"===t){if(this.state.selectedNodes.size>1){const t=this.state.lastSelected,e=Array.from(this.state.selectedNodes).filter(e=>e!==t);this.state.selectedNodes.clear(),t&&this.state.selectedNodes.add(t),e.length>0&&this.emitSelectionChange(this.options,[],e,[],[])}if(this.state.selectedEdges.size>0){const t=Array.from(this.state.selectedEdges);this.state.selectedEdges.clear(),this.emitSelectionChange(this.options,[],[],[],t)}}}getSelectionMode(){return this.state.mode}hasSelection(){return this.state.selectedNodes.size>0||this.state.selectedEdges.size>0}getSelectionCount(){const t=this.state.selectedNodes.size,e=this.state.selectedEdges.size;return{nodes:t,edges:e,total:t+e}}updateAfterDataChange(t,e){const s=[],i=[];for(const e of this.state.selectedNodes)t.has(e)||(this.state.selectedNodes.delete(e),s.push(e));for(const t of this.state.selectedEdges)e.has(t)||(this.state.selectedEdges.delete(t),i.push(t));this.state.lastSelected&&!t.has(this.state.lastSelected)&&(this.state.lastSelected=void 0),(s.length>0||i.length>0)&&this.emitSelectionChange(this.options,[],s,[],i)}emitSelectionChange(t,e,s,i,n){if(t.silent||!this.onSelectionChange)return;const r={type:"selectionChanged",selectedNodes:Array.from(this.state.selectedNodes),selectedEdges:Array.from(this.state.selectedEdges),addedNodes:e,removedNodes:s,addedEdges:i,removedEdges:n,timestamp:Date.now()};"undefined"!=typeof setTimeout?setTimeout(()=>this.onSelectionChange(r),0):this.onSelectionChange(r)}}class I{constructor(t){this.nodeStyles=new Map,this.edgeStyles=new Map,this.nodeStates=new Map,this.edgeStates=new Map,this.cssRuleIndex=0,this.onStyleChange=t,this.initializeStyleSheet()}setNodeStyle(t,e){const s=this.getOrCreateNodeStyle(t);s.base={...s.base,...e},this.updateComputedStyle(t,"node"),this.applyStyleToElement(t,"node"),this.emitStyleChange([t],"node",e)}setEdgeStyle(t,e){const s=this.getOrCreateEdgeStyle(t);s.base={...s.base,...e},this.updateComputedStyle(t,"edge"),this.applyStyleToElement(t,"edge"),this.emitStyleChange([t],"edge",e)}setNodeState(t,e){(this.nodeStates.get(t)||"normal")!==e&&(this.nodeStates.set(t,e),this.updateComputedStyle(t,"node"),this.applyStyleToElement(t,"node"),this.updateElementClass(t,"node",e))}setEdgeState(t,e){(this.edgeStates.get(t)||"normal")!==e&&(this.edgeStates.set(t,e),this.updateComputedStyle(t,"edge"),this.applyStyleToElement(t,"edge"),this.updateElementClass(t,"edge",e))}updateStyles(t,e){const s=this.resolveElementSelector(t),i=[];for(const{id:t,type:n}of s)"node"===n?this.setNodeStyle(t,e):this.setEdgeStyle(t,e),i.push(t);i.length>0&&this.emitStyleChange(i,s[0]?.type||"node",e)}resetStyle(t){if(!t)return this.nodeStyles.clear(),this.edgeStyles.clear(),this.nodeStates.clear(),this.edgeStates.clear(),void this.clearAllDynamicStyles();const e=this.resolveElementSelector(t);for(const{id:t,type:s}of e)"node"===s?(this.nodeStyles.delete(t),this.nodeStates.set(t,"normal")):(this.edgeStyles.delete(t),this.edgeStates.set(t,"normal")),this.clearElementStyle(t,s)}getNodeStyle(t){const e=this.nodeStyles.get(t);return e?{...e.computed}:null}getEdgeStyle(t){const e=this.edgeStyles.get(t);return e?{...e.computed}:null}getNodeState(t){return this.nodeStates.get(t)||"normal"}getEdgeState(t){return this.edgeStates.get(t)||"normal"}clearStyles(){this.resetStyle()}registerElement(t,e,s){"node"===e?this.getOrCreateNodeStyle(t).element=s:this.getOrCreateEdgeStyle(t).element=s}unregisterElement(t,e){if("node"===e){const e=this.nodeStyles.get(t);e&&(e.element=void 0)}else{const e=this.edgeStyles.get(t);e&&(e.element=void 0)}}applyTheme(t){const e=this.getThemeStyles(t);this.nodeStyles.forEach((t,s)=>{t.element&&(Object.assign(t.base,e.node),this.updateComputedStyle(s,"node"),this.applyStyleToElement(s,"node"))}),this.edgeStyles.forEach((t,s)=>{t.element&&(Object.assign(t.base,e.edge),this.updateComputedStyle(s,"edge"),this.applyStyleToElement(s,"edge"))})}getOrCreateNodeStyle(t){return this.nodeStyles.has(t)||this.nodeStyles.set(t,{base:{},state:{},computed:{}}),this.nodeStyles.get(t)}getOrCreateEdgeStyle(t){return this.edgeStyles.has(t)||this.edgeStyles.set(t,{base:{},state:{},computed:{}}),this.edgeStyles.get(t)}updateComputedStyle(t,e){const s="node"===e?this.nodeStyles.get(t):this.edgeStyles.get(t);if(!s)return;const i="node"===e?this.getNodeState(t):this.getEdgeState(t);s.computed={...s.base,...s.state[i]||{}}}applyStyleToElement(t,e){const s="node"===e?this.nodeStyles.get(t):this.edgeStyles.get(t);if(!s?.element)return;const i=s.element,n=s.computed;n.fill&&i.setAttribute("fill",n.fill),n.stroke&&i.setAttribute("stroke",n.stroke),void 0!==n.strokeWidth&&i.setAttribute("stroke-width",String(n.strokeWidth)),void 0!==n.opacity&&i.setAttribute("opacity",String(n.opacity)),n.strokeDasharray&&i.setAttribute("stroke-dasharray",n.strokeDasharray),n.filter&&i.setAttribute("filter",n.filter),"node"===e&&void 0!==n.size&&("circle"===i.tagName?i.setAttribute("r",String(n.size/2)):"rect"===i.tagName&&(i.setAttribute("width",String(n.size)),i.setAttribute("height",String(n.size)),i.setAttribute("x",String(-n.size/2)),i.setAttribute("y",String(-n.size/2)))),"edge"===e&&n.markerEnd&&i.setAttribute("marker-end",n.markerEnd),n.className&&i.setAttribute("class",n.className)}updateElementClass(t,e,s){const i="node"===e?this.nodeStyles.get(t):this.edgeStyles.get(t);if(!i?.element)return;const n=i.element,r="node"===e?"graph-node":"graph-edge",o=`${r}--${s}`;n.className.baseVal=n.className.baseVal.replace(/\bgraph-(node|edge)--\w+\b/g,"").trim(),n.classList.add(r,o),i.computed.className&&n.classList.add(i.computed.className)}resolveElementSelector(t){const e=[];if("string"==typeof t)"all"===t?(this.nodeStyles.forEach((t,s)=>e.push({id:s,type:"node"})),this.edgeStyles.forEach((t,s)=>e.push({id:s,type:"edge"}))):"selected"===t||"highlighted"===t||(this.nodeStyles.has(t)&&e.push({id:t,type:"node"}),this.edgeStyles.has(t)&&e.push({id:t,type:"edge"}));else if(Array.isArray(t))for(const s of t)this.nodeStyles.has(s)&&e.push({id:s,type:"node"}),this.edgeStyles.has(s)&&e.push({id:s,type:"edge"});return e}initializeStyleSheet(){const t=document.createElement("style");t.id="graph-dynamic-styles",document.head.appendChild(t),this.styleSheet=t.sheet}clearAllDynamicStyles(){if(this.styleSheet){for(;this.styleSheet.cssRules.length>0;)this.styleSheet.deleteRule(0);this.cssRuleIndex=0}}clearElementStyle(t,e){const s="node"===e?this.nodeStyles.get(t):this.edgeStyles.get(t);if(!s?.element)return;const i=s.element;["fill","stroke","stroke-width","opacity","stroke-dasharray","filter","marker-end"].forEach(t=>{i.removeAttribute(t)});const n="node"===e?"graph-node":"graph-edge";i.className.baseVal=n}getThemeStyles(t){return"dark"===t?{node:{fill:"#64748b",stroke:"#94a3b8",strokeWidth:1},edge:{stroke:"#475569",strokeWidth:1}}:{node:{fill:"#e2e8f0",stroke:"#64748b",strokeWidth:1},edge:{stroke:"#94a3b8",strokeWidth:1}}}emitStyleChange(t,e,s){if(!this.onStyleChange)return;const i={type:"styleChanged",elements:t,elementType:e,styles:s,timestamp:Date.now()};"undefined"!=typeof setTimeout?setTimeout(()=>this.onStyleChange(i),0):this.onStyleChange(i)}}class G{constructor(t){this.animationCounter=0,this.logger=m("HighlightManager"),this.state={nodes:new Map,edges:new Map,paths:new Map,animations:new Map},this.onHighlightChange=t}highlightNode(t,e={}){const s=this.mergeWithDefaults(e);this.state.nodes.set(t,s),this.applyHighlightToElement(t,"node",s),this.emitHighlightChange()}highlightNodes(t,e={}){const s=this.mergeWithDefaults(e);for(const e of t)this.state.nodes.set(e,s),this.applyHighlightToElement(e,"node",s);this.emitHighlightChange()}highlightEdge(t,e={}){const s=this.mergeWithDefaults(e);this.state.edges.set(t,s),this.applyHighlightToElement(t,"edge",s),this.emitHighlightChange()}highlightEdges(t,e={}){const s=this.mergeWithDefaults(e);for(const e of t)this.state.edges.set(e,s),this.applyHighlightToElement(e,"edge",s);this.emitHighlightChange()}highlightPath(t,e,s={}){if(!this.graphAdjacency)return this.logger.warn("Graph adjacency not initialized. Call updateGraphStructure() first."),null;const i=this.findShortestPath(t,e);if(!i||0===i.length)return null;const n=`path_${t}_${e}`,r=[],o=this.mergeWithDefaults({color:s.pathColor||s.color||"#ff6b35",strokeWidth:s.strokeWidth||3,animated:s.showFlow||!1,duration:s.duration||1e3,zIndex:s.zIndex||100});for(let t=0;t<i.length;t++){const e=i[t];if(this.state.nodes.set(e,o),this.applyHighlightToElement(e,"node",o),r.push(e),t<i.length-1){const e=this.findEdgeBetweenNodes(i[t],i[t+1]);if(e){const t=this.mergeWithDefaults({color:s.pathColor||s.color||"#ff6b35",strokeWidth:(s.pathWidth||s.strokeWidth||3)+1,animated:s.showFlow||!1,duration:s.duration||1e3,zIndex:s.zIndex||100});this.state.edges.set(e,t),this.applyHighlightToElement(e,"edge",t),r.push(e)}}}return this.state.paths.set(n,r),s.showFlow&&this.animatePathFlow(r,s),this.emitHighlightChange(),r}highlightNeighbors(t,e={}){if(!this.graphAdjacency)return this.logger.warn("Graph adjacency not initialized. Call updateGraphStructure() first."),[];const s=e.depth||1,i=[],n=new Set,r=[{nodeId:t,currentDepth:0}],o=this.mergeWithDefaults({color:e.color||"#3b82f6",strokeWidth:e.strokeWidth||3,opacity:e.opacity||.8,zIndex:e.zIndex||50});for(this.state.nodes.set(t,o),this.applyHighlightToElement(t,"node",o),i.push(t),n.add(t);r.length>0;){const{nodeId:t,currentDepth:o}=r.shift();if(o>=s)continue;const a=this.graphAdjacency.adjacency.get(t)||new Set;for(const h of a){if(n.has(h))continue;n.add(h);const a=(o+1)/s,l=this.getDepthBasedStyle(e,o+1,a);if(this.state.nodes.set(h,l),this.applyHighlightToElement(h,"node",l),i.push(h),e.highlightEdges){const e=this.findEdgeBetweenNodes(t,h);if(e){const t=this.mergeWithDefaults({color:l.color,strokeWidth:(l.strokeWidth||2)-1,opacity:.7*(l.opacity||.8),zIndex:(l.zIndex||50)-10});this.state.edges.set(e,t),this.applyHighlightToElement(e,"edge",t),i.push(e)}}r.push({nodeId:h,currentDepth:o+1})}}return this.emitHighlightChange(),i}highlightConnections(t,e={}){if(!this.graphAdjacency)return this.logger.warn("Graph adjacency not initialized. Call updateGraphStructure() first."),[];const s=this.graphAdjacency.nodeToEdges.get(t)||[],i=this.mergeWithDefaults(e);this.state.nodes.set(t,i),this.applyHighlightToElement(t,"node",i);for(const t of s)this.state.edges.set(t,i),this.applyHighlightToElement(t,"edge",i);return this.emitHighlightChange(),[t,...s]}clearHighlights(){for(const t of this.state.nodes.keys())this.clearElementHighlight(t,"node");for(const t of this.state.edges.keys())this.clearElementHighlight(t,"edge");for(const t of this.state.animations.values())cancelAnimationFrame(t);this.state.nodes.clear(),this.state.edges.clear(),this.state.paths.clear(),this.state.animations.clear(),this.emitHighlightChange()}clearNodeHighlight(t){this.state.nodes.has(t)&&(this.state.nodes.delete(t),this.clearElementHighlight(t,"node"),this.emitHighlightChange())}clearEdgeHighlight(t){this.state.edges.has(t)&&(this.state.edges.delete(t),this.clearElementHighlight(t,"edge"),this.emitHighlightChange())}isNodeHighlighted(t){return this.state.nodes.has(t)}isEdgeHighlighted(t){return this.state.edges.has(t)}getHighlightedNodes(){return Array.from(this.state.nodes.keys())}getHighlightedEdges(){return Array.from(this.state.edges.keys())}updateGraphStructure(t,e){this.graphAdjacency={nodeToEdges:new Map,edgeToNodes:new Map,adjacency:new Map};for(const e of t)this.graphAdjacency.nodeToEdges.set(e,[]),this.graphAdjacency.adjacency.set(e,new Set);for(const t of e){const{id:e,source:s,target:i}=t;this.graphAdjacency.edgeToNodes.set(e,[s,i]),this.graphAdjacency.nodeToEdges.get(s)?.push(e),this.graphAdjacency.nodeToEdges.get(i)?.push(e),this.graphAdjacency.adjacency.get(s)?.add(i),this.graphAdjacency.adjacency.get(i)?.add(s)}}findShortestPath(t,e){if(!this.graphAdjacency||t===e)return null;const s=new Set,i=[t],n=new Map;for(s.add(t);i.length>0;){const t=i.shift();if(t===e){const t=[];let s=e;for(;void 0!==s;)t.unshift(s),s=n.get(s);return t}const r=this.graphAdjacency.adjacency.get(t)||new Set;for(const e of r)s.has(e)||(s.add(e),n.set(e,t),i.push(e))}return null}findEdgeBetweenNodes(t,e){if(!this.graphAdjacency)return null;const s=this.graphAdjacency.nodeToEdges.get(t)||[];for(const i of s){const s=this.graphAdjacency.edgeToNodes.get(i);if(s&&(s[0]===t&&s[1]===e||s[0]===e&&s[1]===t))return i}return null}getDepthBasedStyle(t,e,s){const i=t.color||"#3b82f6",n=t.depthColors||[];let r=i;n.length>0&&e-1<n.length&&(r=n[e-1]);let o=t.opacity||.8;return t.fadeByDistance&&(o*=1-.5*s),this.mergeWithDefaults({color:r,opacity:o,strokeWidth:Math.max(1,(t.strokeWidth||3)-e),zIndex:Math.max(1,(t.zIndex||50)-10*e)})}animatePathFlow(t,e){const s=e.duration||1e3,i=e.flowSpeed||1;(()=>{const e=this.animationCounter++,n=Date.now(),r=()=>{const o=Date.now()-n,a=o/s%1;t.forEach((t,e)=>{if(this.state.edges.has(t)){const e=document.getElementById(`edge-${t}`);if(e){const t=20*a*i;e.style.strokeDashoffset=`${t}px`}}}),o<s&&this.state.animations.set(`flow_${e}`,requestAnimationFrame(r))};requestAnimationFrame(r)})()}applyHighlightToElement(t,e,s){const i=document.getElementById(`${e}-${t}`);i&&(s.color&&("node"===e&&i.setAttribute("fill",s.color),i.setAttribute("stroke",s.color)),s.strokeWidth&&i.setAttribute("stroke-width",String(s.strokeWidth)),void 0!==s.opacity&&i.setAttribute("opacity",String(s.opacity)),s.animated&&i.classList.add("graph-highlight-animated"),s.glow&&i.classList.add("graph-highlight-glow"),s.pulse&&i.classList.add("graph-highlight-pulse"),void 0!==s.zIndex&&i.style.setProperty("--highlight-z-index",String(s.zIndex)))}clearElementHighlight(t,e){const s=document.getElementById(`${e}-${t}`);s&&(s.classList.remove("graph-highlight-animated","graph-highlight-glow","graph-highlight-pulse"),s.style.removeProperty("--highlight-z-index"),s.style.strokeDashoffset="")}mergeWithDefaults(t){return{color:"#3b82f6",strokeWidth:2,opacity:1,animated:!1,glow:!1,pulse:!1,duration:300,zIndex:10,...t}}emitHighlightChange(){if(!this.onHighlightChange)return;const t={type:"highlightChanged",highlightedNodes:this.getHighlightedNodes(),highlightedEdges:this.getHighlightedEdges(),style:{},timestamp:Date.now()};"undefined"!=typeof setTimeout?setTimeout(()=>this.onHighlightChange(t),0):this.onHighlightChange(t)}}const $={linear:t=>t,ease:t=>t<.5?2*t*t:(4-2*t)*t-1,"ease-in":t=>t*t,"ease-out":t=>t*(2-t),"ease-in-out":t=>t<.5?2*t*t:(4-2*t)*t-1,"cubic-bezier":t=>t*t*(3-2*t)};class L{constructor(t){this.currentTransform={x:0,y:0,scale:1},this.animationState=null,this.nodePositions=new Map,this.viewportSize={width:800,height:600},this.onFocusChange=t}initialize(t,e){this.svgElement=t,this.transformGroup=e,this.updateViewportSize()}async focusOnNode(t,e={}){if(!this.nodePositions.get(t))throw new Error(`Node '${t}' not found`);return this.focusOnNodes([t],e)}async focusOnNodes(t,e={}){if(0===t.length)throw new Error("No nodes provided for focus");const s=t.map(t=>this.nodePositions.get(t)).filter(Boolean);if(0===s.length)throw new Error("None of the provided nodes were found");const i=this.calculateBounds(s),n=this.calculateTargetTransform(i,e);await this.animateToTransform(n,e),this.emitFocusChange(t,n,e)}async fitToView(t=50){if(0===this.nodePositions.size)return;const e=Array.from(this.nodePositions.values()),s=this.calculateBounds(e),i=this.calculateTargetTransform(s,{padding:t,animated:!0});await this.animateToTransform(i,{padding:t,animated:!0})}async centerView(){if(0===this.nodePositions.size)return;const t=Array.from(this.nodePositions.values()),e=this.calculateBounds(t),s=(e.minX+e.maxX)/2,i=(e.minY+e.maxY)/2,n={x:this.viewportSize.width/2-s*this.currentTransform.scale,y:this.viewportSize.height/2-i*this.currentTransform.scale,scale:this.currentTransform.scale};await this.animateToTransform(n,{animated:!0})}getViewBounds(){const t=this.currentTransform.scale,e=-this.currentTransform.x/t,s=-this.currentTransform.y/t,i=this.viewportSize.width/t,n=this.viewportSize.height/t;return{minX:e,maxX:e+i,minY:s,maxY:s+n,width:i,height:n,center:{x:e+i/2,y:s+n/2}}}isAnimating(){return this.animationState?.active||!1}stopAnimation(){this.animationState?.active&&(this.animationState.active=!1,this.animationState.onComplete&&this.animationState.onComplete())}async setTransform(t,e,s,i=!1){const n={x:t,y:e,scale:s};i?await this.animateToTransform(n,{animated:!0}):(this.applyTransform(n),this.currentTransform=n)}updateNodePositions(t){this.nodePositions.clear();for(const[e,s]of t.entries())this.nodePositions.set(e,{id:e,x:s.x,y:s.y,size:s.size||20})}updateViewportSize(){if(this.svgElement){const t=this.svgElement.getBoundingClientRect();this.viewportSize={width:t.width||800,height:t.height||600}}}calculateBounds(t){if(0===t.length)return{minX:0,maxX:0,minY:0,maxY:0,width:0,height:0,center:{x:0,y:0}};let e=t[0].x,s=t[0].x,i=t[0].y,n=t[0].y;for(const r of t){const t=(r.size||20)/2;e=Math.min(e,r.x-t),s=Math.max(s,r.x+t),i=Math.min(i,r.y-t),n=Math.max(n,r.y+t)}const r=s-e,o=n-i;return{minX:e,maxX:s,minY:i,maxY:n,width:r,height:o,center:{x:e+r/2,y:i+o/2}}}calculateTargetTransform(t,e){const s=e.padding||50,i=e.offset||{x:0,y:0};let n=e.scale;if(!n){const e=(this.viewportSize.width-2*s)/t.width,i=(this.viewportSize.height-2*s)/t.height;n=Math.min(e,i,2),n=Math.max(n,.1)}const r=t.center.x,o=t.center.y;return{x:this.viewportSize.width/2-r*n+i.x,y:this.viewportSize.height/2-o*n+i.y,scale:n}}async animateToTransform(t,e){if(!e.animated)return this.applyTransform(t),void(this.currentTransform=t);this.stopAnimation();const s=e.duration||800,i=e.easing||"ease-out",n={...this.currentTransform},r=Date.now();return new Promise(e=>{this.animationState={active:!0,startTime:r,duration:s,from:n,to:t,easing:i,onComplete:e};const o=()=>{if(!this.animationState?.active)return void e();const a=Date.now()-r,h=Math.min(a/s,1),l=this.applyEasing(h,i),d={x:this.lerp(n.x,t.x,l),y:this.lerp(n.y,t.y,l),scale:this.lerp(n.scale,t.scale,l)};this.applyTransform(d),this.currentTransform=d,h<1?requestAnimationFrame(o):(this.animationState.active=!1,e())};requestAnimationFrame(o)})}applyTransform(t){if(this.transformGroup){const{x:e,y:s,scale:i}=t;this.transformGroup.setAttribute("transform",`translate(${e}, ${s}) scale(${i})`)}}applyEasing(t,e){const s=$[e];return s?s(t):t}lerp(t,e,s){return t+(e-t)*s}emitFocusChange(t,e,s){if(!this.onFocusChange)return;const i={type:"focusChanged",targetNodes:t,transform:e,options:s,timestamp:Date.now()};"undefined"!=typeof setTimeout?setTimeout(()=>this.onFocusChange(i),0):this.onFocusChange(i)}}class R{constructor(t){this.registeredThemes=new Map,this.elementStates=new Map,this.currentTheme=t||this.getDefaultTheme(),this.registerBuiltinThemes()}getDefaultTheme(){return{name:"default",canvas:{background:"#1a1a1a",showGrid:!0,gridColor:"rgba(255, 165, 0, 0.1)",gridSize:30,gridOpacity:.1,syncBackgroundTransform:!0},colors:{primary:"#3b82f6",secondary:"#64748b",background:"#1a1a1a",foreground:"#f8fafc",hover:"#60a5fa",selected:"#2563eb",disabled:"#374151"},nodeStyles:{default:{fill:"#64748b",stroke:"#94a3b8",strokeWidth:2,opacity:1},primary:{fill:"#ef4444",stroke:"#dc2626",strokeWidth:2,opacity:1},secondary:{fill:"#3b82f6",stroke:"#2563eb",strokeWidth:2,opacity:1},tertiary:{fill:"#10b981",stroke:"#059669",strokeWidth:2,opacity:1},auxiliary:{fill:"#f59e0b",stroke:"#d97706",strokeWidth:2,opacity:1},major_power:{fill:"#ef4444",stroke:"#dc2626",strokeWidth:3,opacity:1},regional_power:{fill:"#3b82f6",stroke:"#2563eb",strokeWidth:2,opacity:1},small_nation:{fill:"#10b981",stroke:"#059669",strokeWidth:2,opacity:1}},edgeStyles:{default:{stroke:"#64748b",strokeWidth:1,opacity:.8}},states:{hover:{nodes:{stroke:"#60a5fa",strokeWidth:3}},selected:{nodes:{stroke:"#2563eb",strokeWidth:4}},disabled:{nodes:{opacity:.3,filter:"grayscale(100%)"},edges:{opacity:.3,filter:"grayscale(100%)"}}}}}getMinimalTheme(){return{name:"minimal",canvas:{background:"#ffffff",showGrid:!1,syncBackgroundTransform:!0},colors:{primary:"#000000",secondary:"#666666",background:"#ffffff",foreground:"#000000",hover:"#333333",selected:"#000000",disabled:"#cccccc"},nodeStyles:{default:{fill:"#ffffff",stroke:"#000000",strokeWidth:1,opacity:1},primary:{fill:"#fca5a5",stroke:"#ef4444",strokeWidth:2,opacity:1},secondary:{fill:"#93c5fd",stroke:"#3b82f6",strokeWidth:2,opacity:1},tertiary:{fill:"#6ee7b7",stroke:"#10b981",strokeWidth:2,opacity:1},auxiliary:{fill:"#fbbf24",stroke:"#f59e0b",strokeWidth:2,opacity:1},major_power:{fill:"#fca5a5",stroke:"#ef4444",strokeWidth:3,opacity:1},regional_power:{fill:"#93c5fd",stroke:"#3b82f6",strokeWidth:2,opacity:1},small_nation:{fill:"#6ee7b7",stroke:"#10b981",strokeWidth:2,opacity:1}},edgeStyles:{default:{stroke:"#666666",strokeWidth:1,opacity:1}},states:{hover:{nodes:{stroke:"#333333",strokeWidth:2}},selected:{nodes:{stroke:"#000000",strokeWidth:2}}}}}getDarkTheme(){return{name:"dark",canvas:{background:"#0f0f0f",showGrid:!0,gridColor:"rgba(255, 165, 0, 0.1)",gridSize:30,gridOpacity:.1,syncBackgroundTransform:!0},colors:{primary:"#60a5fa",secondary:"#94a3b8",background:"#0f0f0f",foreground:"#f8fafc",hover:"#93c5fd",selected:"#3b82f6",disabled:"#374151"},nodeStyles:{default:{fill:"#1f2937",stroke:"#6b7280",strokeWidth:2,opacity:1},primary:{fill:"#dc2626",stroke:"#b91c1c",strokeWidth:2,opacity:1},secondary:{fill:"#2563eb",stroke:"#1d4ed8",strokeWidth:2,opacity:1},tertiary:{fill:"#059669",stroke:"#047857",strokeWidth:2,opacity:1},auxiliary:{fill:"#d97706",stroke:"#b45309",strokeWidth:2,opacity:1},major_power:{fill:"#dc2626",stroke:"#b91c1c",strokeWidth:3,opacity:1},regional_power:{fill:"#2563eb",stroke:"#1d4ed8",strokeWidth:2,opacity:1},small_nation:{fill:"#059669",stroke:"#047857",strokeWidth:2,opacity:1}},edgeStyles:{default:{stroke:"#6b7280",strokeWidth:1,opacity:.8}},states:{hover:{nodes:{stroke:"#93c5fd",strokeWidth:3,fill:"#374151"},edges:{stroke:"#93c5fd",opacity:1}},selected:{nodes:{stroke:"#3b82f6",strokeWidth:4,fill:"#1e3a8a"},edges:{stroke:"#3b82f6",opacity:1}},disabled:{nodes:{opacity:.3,filter:"grayscale(100%)"},edges:{opacity:.3,filter:"grayscale(100%)"}}}}}getLightTheme(){return{name:"light",canvas:{background:"#ffffff",showGrid:!0,gridColor:"rgba(0, 100, 255, 0.1)",gridSize:30,gridOpacity:.1,syncBackgroundTransform:!0},colors:{primary:"#2563eb",secondary:"#64748b",background:"#ffffff",foreground:"#1e293b",hover:"#3b82f6",selected:"#1d4ed8",disabled:"#d1d5db"},nodeStyles:{default:{fill:"#f8fafc",stroke:"#64748b",strokeWidth:2,opacity:1},primary:{fill:"#fee2e2",stroke:"#ef4444",strokeWidth:2,opacity:1},secondary:{fill:"#dbeafe",stroke:"#3b82f6",strokeWidth:2,opacity:1},tertiary:{fill:"#d1fae5",stroke:"#10b981",strokeWidth:2,opacity:1},auxiliary:{fill:"#fef3c7",stroke:"#f59e0b",strokeWidth:2,opacity:1},major_power:{fill:"#fee2e2",stroke:"#ef4444",strokeWidth:3,opacity:1},regional_power:{fill:"#dbeafe",stroke:"#3b82f6",strokeWidth:2,opacity:1},small_nation:{fill:"#d1fae5",stroke:"#10b981",strokeWidth:2,opacity:1}},edgeStyles:{default:{stroke:"#64748b",strokeWidth:1,opacity:.8}},states:{hover:{nodes:{stroke:"#3b82f6",strokeWidth:3,fill:"#e0f2fe"},edges:{stroke:"#3b82f6",opacity:1}},selected:{nodes:{stroke:"#1d4ed8",strokeWidth:4,fill:"#dbeafe"},edges:{stroke:"#1d4ed8",opacity:1}},disabled:{nodes:{opacity:.4,filter:"grayscale(80%)"},edges:{opacity:.4,filter:"grayscale(80%)"}}}}}registerBuiltinThemes(){this.registeredThemes.set("default",this.getDefaultTheme()),this.registeredThemes.set("minimal",this.getMinimalTheme()),this.registeredThemes.set("dark",this.getDarkTheme()),this.registeredThemes.set("light",this.getLightTheme())}setTheme(t){if("string"==typeof t){const e=this.registeredThemes.get(t);if(!e)throw new Error(`Theme '${t}' not found. Available themes: ${Array.from(this.registeredThemes.keys()).join(", ")}`);this.currentTheme=e}else this.currentTheme=t}getCurrentTheme(){return this.currentTheme}registerTheme(t,e){this.registeredThemes.set(t,{...e,name:t})}getNodeStyle(t,e=new Set(["normal"])){let s={};this.currentTheme.nodeStyles?.default&&(s={...this.currentTheme.nodeStyles.default}),t&&this.currentTheme.nodeStyles?.[t]&&(s={...s,...this.currentTheme.nodeStyles[t]});const i=["normal","hover","active","selected","disabled"];for(const t of i)e.has(t)&&this.currentTheme.states?.[t]?.nodes&&(s={...s,...this.currentTheme.states[t].nodes});return s}getEdgeStyle(t,e=new Set(["normal"])){let s={};this.currentTheme.edgeStyles?.default&&(s={...this.currentTheme.edgeStyles.default}),t&&this.currentTheme.edgeStyles?.[t]&&(s={...s,...this.currentTheme.edgeStyles[t]});const i=["normal","hover","active","selected","disabled"];for(const t of i)e.has(t)&&this.currentTheme.states?.[t]?.edges&&(s={...s,...this.currentTheme.states[t].edges});return s}getCanvasConfig(){return this.currentTheme.canvas||{}}getColor(t){return this.currentTheme.colors?.[t]}setElementState(t,e,s){this.elementStates.has(t)||this.elementStates.set(t,new Set(["normal"]));const i=this.elementStates.get(t);s?(i.add(e),"normal"!==e&&i.delete("normal")):(i.delete(e),0===i.size&&i.add("normal"))}getElementStates(t){return this.elementStates.get(t)||new Set(["normal"])}clearElementStates(){this.elementStates.clear()}updateTheme(t){this.currentTheme={...this.currentTheme,...t,canvas:t.canvas?{...this.currentTheme.canvas,...t.canvas}:this.currentTheme.canvas,colors:t.colors?{...this.currentTheme.colors,...t.colors}:this.currentTheme.colors,nodeStyles:t.nodeStyles?{...this.currentTheme.nodeStyles,...t.nodeStyles}:this.currentTheme.nodeStyles,edgeStyles:t.edgeStyles?{...this.currentTheme.edgeStyles,...t.edgeStyles}:this.currentTheme.edgeStyles,states:t.states?{...this.currentTheme.states,...t.states}:this.currentTheme.states}}setNodeStyle(t,e){this.currentTheme.nodeStyles||(this.currentTheme.nodeStyles={}),this.currentTheme.nodeStyles[t]={...this.currentTheme.nodeStyles[t],...e}}setEdgeStyle(t,e){this.currentTheme.edgeStyles||(this.currentTheme.edgeStyles={}),this.currentTheme.edgeStyles[t]={...this.currentTheme.edgeStyles[t],...e}}getAvailableThemes(){return Array.from(this.registeredThemes.keys())}configureGrid(t){this.currentTheme.canvas||(this.currentTheme.canvas={}),void 0!==t.enabled&&(this.currentTheme.canvas.showGrid=t.enabled),void 0!==t.color&&(this.currentTheme.canvas.gridColor=t.color),void 0!==t.size&&(this.currentTheme.canvas.gridSize=t.size),void 0!==t.opacity&&(this.currentTheme.canvas.gridOpacity=t.opacity)}getGridConfig(){const t=this.currentTheme.canvas||{};return{enabled:t.showGrid??!1,color:t.gridColor,size:t.gridSize,opacity:t.gridOpacity}}}var F=class{constructor(e,s={}){this.nodes=new Map,this.links=[],this.edges=new Map,this.filteredNodes=null,this.currentFilterNodeId=null,this.currentTransaction=null,this.transactionIdCounter=0,this.animationFrame=null,this.isAnimating=!1,this.lastFrameTime=0,this.frameCount=0,this.fps=0,this.physics=null,this.renderer=null,this.ui=null,this.events=null,this.selectionManager=null,this.styleManager=null,this.highlightManager=null,this.cameraController=null,this.themeManager=null,this.eventCallbacks={},this.customEventListeners=new Map,this.logger=m("GraphNetwork"),this.tooltip=null,this.tooltipConfig={enabled:!0,showPosition:!0,showType:!0},this.startTime=Date.now(),this.containerId=e,this.container=this.findContainer(e),this.debug=s.debug||!1,this.debug&&this.logger.setLevel(t.DEBUG),this.config={...b,...s.config},this.logger.info("Initializing with config:",this.config),this.setupContainer(),this.initializeModules(),s.data&&this.setData(s.data),this.startAnimation()}findContainer(t){const e=document.getElementById(t);if(!e)throw new Error(`Container element with id "${t}" not found.`);return e}setupContainer(){this.container.innerHTML="",this.container.classList.add("graph-network-container"),this.container.setAttribute("data-theme",this.config.theme)}initializeModules(){this.themeManager=new R,this.logger.debug("Theme manager initialized"),this.physics=new r({damping:this.config.damping,repulsionStrength:this.config.repulsionStrength,attractionStrength:this.config.attractionStrength,groupingStrength:this.config.groupingStrength}),this.logger.debug("Physics engine initialized"),this.renderer=new p(this.container,this.containerId,this.themeManager,{showLabels:!0,debug:this.debug}),this.renderer.initialize(),this.logger.debug("SVG renderer initialized");const t={onZoomIn:()=>this.zoomIn(),onZoomOut:()=>this.zoomOut(),onResetView:()=>this.resetViewAndLayout(),onToggleTheme:()=>this.toggleTheme(),onConfigChange:(t,e)=>this.updatePhysicsConfig(t,e),onBreadcrumbClick:t=>this.handleBreadcrumbAction(t)};this.ui=new o(this.container,this.config,t,this.themeManager),this.ui.initialize(),this.logger.debug("UI manager initialized"),this.eventCallbacks={getNodeElements:()=>this.renderer?.getNodeElements()||new Map,fixNode:t=>t.fix(),unfixNode:t=>t.unfix(),filterByNode:t=>{this.currentFilterNodeId===t?this.resetFilter():this.filterByNode(t)},resetFilter:()=>this.resetFilter(),updateTransform:(t,e,s)=>this.renderer?.setTransform(t,e,s),showTooltip:(t,e)=>this.showTooltip(t,e),hideTooltip:()=>this.hideTooltip(),closeSettings:()=>this.ui?.closeSettings(),resize:()=>this.handleResize()},this.events=new f(this.config),this.createTooltip(),this.selectionManager=new z(t=>this.emit("selectionChanged",t)),this.styleManager=new I(t=>this.emit("styleChanged",t)),this.highlightManager=new G(t=>this.emit("highlightChanged",t)),this.cameraController=new L(t=>this.emit("focusChanged",t)),this.setTheme(this.config.theme),this.logger.debug("All modules initialized successfully")}parseData(t){const{nodes:e,links:s}=t;if(!Array.isArray(e)||0===e.length)throw new Error("Data must contain a non-empty nodes array");const i=this.container.getBoundingClientRect(),r=i.width||800,o=i.height||600;if(this.logger.debug(`Container dimensions: ${r}x${o}`),e.forEach((t,e)=>{if(!y(t))throw new Error(`Invalid node data at index ${e}. Must have id and name properties.`);const s=new n(t,r,o);this.debug&&e<5&&console.log(`GraphNetwork: Node ${t.name} created at position: (${s.position.x.toFixed(2)}, ${s.position.y.toFixed(2)})`),this.nodes.set(t.id,s)}),!Array.isArray(s))throw new Error("Data must contain a links array");s.forEach((t,e)=>{if(!S(t))throw new Error(`Invalid link data at index ${e}. Must have source and target properties.`);const s=this.nodes.get(t.source),i=this.nodes.get(t.target);if(!s||!i)throw new Error(`Link references non-existent node: ${t.source} -> ${t.target}`);this.links.push({source:s,target:i,data:t,label:t.label||"",weight:t.weight||1,line_type:t.line_type||"solid"});const n=t.id||`${t.source}-${t.target}`;this.edges.set(n,{id:n,...t})}),this.debug&&console.log(`GraphNetwork: Successfully parsed ${this.nodes.size} nodes and ${this.links.length} links`)}updatePhysicsConfig(t,e){this.config[t]=e,this.debug&&console.log(`GraphNetwork: Updated config ${t} = ${e}`),"filterDepth"===t?this.currentFilterNodeId&&this.filterByNode(this.currentFilterNodeId,e):this.physics?.updateConfig({[t]:e})}startAnimation(){this.isAnimating||(this.isAnimating=!0,this.lastFrameTime=performance.now(),this.frameCount=0,this.logger.debug("Animation started"),this.animate())}stopAnimation(){this.isAnimating=!1,this.animationFrame&&(cancelAnimationFrame(this.animationFrame),this.animationFrame=null),this.logger.debug("Animation stopped")}animate(){if(!this.isAnimating)return;const t=performance.now(),e=t-this.lastFrameTime;if(this.frameCount++,this.frameCount%60==0&&(this.fps=Math.round(1e3/e)),this.physics){if(!this.events?.isPanning()){const t=r.createLinks(this.links.map(t=>({source:t.source.getId(),target:t.target.getId(),weight:t.weight})),this.nodes);this.physics.updateForces(this.nodes,t,this.filteredNodes),this.physics.updatePositions(this.nodes,this.filteredNodes)}this.renderer?.render(this.nodes,this.links,this.filteredNodes),this.lastFrameTime=t,this.animationFrame=requestAnimationFrame(()=>this.animate())}else console.error("GraphNetwork: Physics engine not initialized")}filterByNode(t,e=null){const s=null!==e?e:this.config.filterDepth,i=this.nodes.get(t);if(!i)throw new Error(`Node with id "${t}" does not exist`);const n=new Set,r=[{node:i,currentDepth:0}];for(;r.length>0;){const t=r.shift();if(!t)break;const{node:e,currentDepth:i}=t;n.has(e.getId())||i>s||(n.add(e.getId()),this.links.forEach(t=>{t.source!==e||n.has(t.target.getId())?t.target!==e||n.has(t.source.getId())||r.push({node:t.source,currentDepth:i+1}):r.push({node:t.target,currentDepth:i+1})}))}this.filteredNodes=n,this.currentFilterNodeId=t,this.updateGraphView();const o=[{name:"All Nodes",action:"reset"},{name:i.getName()}];this.ui?.renderBreadcrumbs(o),this.debug&&console.log(`GraphNetwork: Filtered to ${n.size} nodes from node "${i.getName()}" with depth ${s}`),this.emit("filtered",{nodeId:t,depth:s,visibleNodes:Array.from(n),nodeName:i.getName()})}resetFilter(){const t=null!==this.filteredNodes;this.filteredNodes=null,this.currentFilterNodeId=null,this.updateGraphView(),this.ui?.renderBreadcrumbs([{name:"All Nodes"}]),t&&this.logger.debug("Filter reset - showing all nodes"),this.emit("filterReset",{previousFilterNodeId:this.currentFilterNodeId,totalNodes:this.nodes.size})}updateGraphView(){this.emit("viewUpdated",{filteredNodes:this.filteredNodes?Array.from(this.filteredNodes):null,totalNodes:this.nodes.size,visibleNodes:this.filteredNodes?.size||this.nodes.size})}resetAllNodePositions(){const t=this.container.getBoundingClientRect(),e=t.width||800,s=t.height||600;this.nodes.forEach(t=>{t.resetPosition(e,s)}),this.logger.debug(`Reset positions for ${this.nodes.size} nodes`)}resetViewAndLayout(){this.resetAllNodePositions(),this.renderer?.setTransform(0,0,1),this.events?.setTransform(0,0,1),this.logger.debug("View and layout reset"),this.emit("reset",{nodeCount:this.nodes.size,timestamp:Date.now()})}zoomIn(t){const e=this.events?.getTransform()||{x:0,y:0,scale:1},s=t||Math.pow(this.config.zoomSensitivity,10),i=Math.min(2,e.scale*s),n=this.container.getBoundingClientRect(),r=n.width/2,o=n.height/2,a=i/e.scale,h=r-(r-e.x)*a,l=o-(o-e.y)*a;this.renderer?.setTransform(h,l,i),this.events?.setTransform(h,l,i),this.emit("zoom",{scale:i,x:h,y:l,direction:"in",factor:s})}zoomOut(t){const e=this.events?.getTransform()||{x:0,y:0,scale:1},s=t||Math.pow(this.config.zoomSensitivity,10),i=Math.max(.2,e.scale/s),n=this.container.getBoundingClientRect(),r=n.width/2,o=n.height/2,a=i/e.scale,h=r-(r-e.x)*a,l=o-(o-e.y)*a;this.renderer?.setTransform(h,l,i),this.events?.setTransform(h,l,i),this.emit("zoom",{scale:i,x:h,y:l,direction:"out",factor:s})}zoomToFit(t=50){if(!this.renderer||0===this.nodes.size)return;const e=this.renderer.getBounds(this.nodes,this.filteredNodes),s=this.container.getBoundingClientRect();if(0===e.width||0===e.height)return;const i=(s.width-2*t)/e.width,n=(s.height-2*t)/e.height,r=Math.min(Math.max(.2,Math.min(i,n)),2),o=s.width/2,a=s.height/2,h=o-(e.x+e.width/2)*r,l=a-(e.y+e.height/2)*r;this.renderer.setTransform(h,l,r),this.events?.setTransform(h,l,r),this.debug&&console.log(`GraphNetwork: Zoom to fit - scale: ${r.toFixed(2)}, bounds:`,e),this.emit("zoom",{scale:r,x:h,y:l,direction:"fit",bounds:e})}toggleTheme(){if(!this.themeManager)throw new Error("ThemeManager not initialized");const t="light"===this.themeManager.getCurrentTheme().name?"dark":"light";this.setTheme(t)}handleBreadcrumbAction(t){"reset"===t&&this.resetFilter()}handleResize(){const t=this.container.getBoundingClientRect();this.renderer?.resize(t.width,t.height),this.logger.debug(`Resized to ${t.width}x${t.height}`),this.emit("resize",{width:t.width,height:t.height})}createTooltip(){this.tooltipConfig.enabled&&(this.tooltip=document.createElement("div"),this.tooltip.className="graph-network-tooltip",this.tooltip.style.display="none",this.tooltip.style.pointerEvents="none",document.body.appendChild(this.tooltip))}showTooltip(t,e=null){if(!this.tooltip||!this.tooltipConfig.enabled)return;let s;if(this.tooltipConfig.formatter)s=this.tooltipConfig.formatter(t);else{const e=[`<strong>${t.getName()}</strong>`];this.tooltipConfig.showType&&t.getType()&&e.push(`Type: ${t.getType()}`),this.tooltipConfig.showPosition&&e.push(`Position: (${Math.round(t.position.x)}, ${Math.round(t.position.y)})`),this.tooltipConfig.customFields&&this.tooltipConfig.customFields.forEach(s=>{const i=t.data[s];void 0!==i&&e.push(`${s}: ${i}`)}),s=e.join("<br>")}this.tooltip.innerHTML=s,e&&(this.tooltip.style.left=`${e.x}px`,this.tooltip.style.top=`${e.y}px`),this.tooltip.style.display="block"}hideTooltip(){this.tooltip&&(this.tooltip.style.display="none")}configureTooltip(t){this.tooltipConfig={...this.tooltipConfig,...t},!t.enabled&&this.tooltip&&this.hideTooltip()}clearGraph(){this.nodes.clear(),this.links=[],this.edges.clear(),this.filteredNodes=null,this.currentFilterNodeId=null,this.renderer?.clearElements(),this.logger.debug("Graph data cleared")}addNode(t,e={}){try{if(!e.skipValidation){if(!y(t))throw new k("Invalid node data. Must have id and name properties.",t);if(!t.id||"string"!=typeof t.id||""===t.id.trim())throw new k("Node id must be a non-empty string",t);if(!t.name||"string"!=typeof t.name||""===t.name.trim())throw new k("Node name must be a non-empty string",t);if(void 0!==t.type&&"string"!=typeof t.type)throw new k("Node type must be a string",t);if(void 0!==t.size&&("number"!=typeof t.size||t.size<=0||!isFinite(t.size)||isNaN(t.size)))throw new k("Node size must be a positive finite number",t)}if(this.nodes.has(t.id))throw new v(t.id);const s=this.container.getBoundingClientRect(),i=s.width||800,r=s.height||600,o=new n(t,i,r);return void 0!==e.x&&void 0!==e.y&&(o.position.x=e.x,o.position.y=e.y),this.nodes.set(t.id,o),this.currentTransaction&&this.currentTransaction.operations.push({type:"addNode",targetId:t.id,timestamp:Date.now(),beforeState:null,afterState:{...t}}),e.skipRedraw||(this.renderer?.createElements(this.nodes,this.links),this.ui?.createLegend(Array.from(this.nodes.values())),this.events&&this.renderer&&this.events.initialize(this.renderer.getSVGElement(),this.nodes,this.eventCallbacks)),this.logger.debug(`Added node "${t.name}" (${t.id})`),this.emit("nodeAdded",{node:o,nodeId:t.id,nodeData:{...t},type:"nodeAdded",timestamp:Date.now()}),o}catch(t){throw this.logger.error("Failed to add node:",A.getErrorDetails(t)),t}}deleteNode(t,e={}){try{const s=this.nodes.get(t);if(!s)throw new T(t);const i={...s.data},n=[];return this.edges.forEach((e,s)=>{e.source!==t&&e.target!==t||n.push({...e})}),this.links=this.links.filter(e=>e.source.getId()!==t&&e.target.getId()!==t),n.forEach(t=>{t.id&&this.edges.delete(t.id)}),this.nodes.delete(t),this.currentFilterNodeId===t&&this.resetFilter(),this.filteredNodes?.has(t)&&(this.filteredNodes.delete(t),0===this.filteredNodes.size&&(this.filteredNodes=null)),e.skipRedraw||(this.renderer?.createElements(this.nodes,this.links),this.ui?.createLegend(Array.from(this.nodes.values()))),this.currentTransaction&&this.currentTransaction.operations.push({type:"deleteNode",targetId:t,timestamp:Date.now(),beforeState:i,afterState:null}),this.debug&&console.log(`GraphNetwork: Deleted node "${t}" and ${n.length} connected edges`),this.emit("nodeRemoved",{nodeId:t,nodeData:i,connectedEdges:n,type:"nodeRemoved",timestamp:Date.now()}),n.forEach(t=>{this.emit("linkRemoved",{linkData:t,type:"linkRemoved",timestamp:Date.now()})}),!0}catch(t){throw this.debug&&console.error("GraphNetwork: Failed to delete node:",A.getErrorDetails(t)),t}}removeNode(t,e=!0){return this.deleteNode(t,{skipRedraw:!e})}addEdge(t,e={}){try{if(!e.skipValidation){if(!t.id||"string"!=typeof t.id||""===t.id.trim())throw new C("Edge id must be a non-empty string",t);if(!t.source||"string"!=typeof t.source)throw new C("Edge source must be a non-empty string",t);if(!t.target||"string"!=typeof t.target)throw new C("Edge target must be a non-empty string",t);if(t.source===t.target)throw new C("Edge cannot connect node to itself",t)}if(this.edges.has(t.id))throw new N(t.id);const s=this.nodes.get(t.source),i=this.nodes.get(t.target),n=[];if(s||n.push(t.source),i||n.push(t.target),n.length>0)throw new M(t.source,t.target,n);if(void 0!==t.weight&&("number"!=typeof t.weight||t.weight<0))throw new C("Edge weight must be a non-negative number",t);if(void 0!==t.line_type&&!["solid","dashed","dotted"].includes(t.line_type))throw new C('Edge line_type must be "solid", "dashed", or "dotted"',t);const r={source:s,target:i,data:t,label:t.label||"",weight:t.weight||1,line_type:t.line_type||"solid"};return this.edges.set(t.id,{...t}),this.links.push(r),this.currentTransaction&&this.currentTransaction.operations.push({type:"addEdge",targetId:t.id,timestamp:Date.now(),beforeState:null,afterState:{...t}}),e.skipRedraw||(this.renderer?.createElements(this.nodes,this.links),this.events&&this.renderer&&this.events.initialize(this.renderer.getSVGElement(),this.nodes,this.eventCallbacks)),this.debug&&console.log(`GraphNetwork: Added edge "${t.id}" (${t.source} -> ${t.target})`),this.emit("linkAdded",{linkData:{...t},edgeId:t.id,type:"linkAdded",timestamp:Date.now()}),r}catch(t){throw this.debug&&console.error("GraphNetwork: Failed to add edge:",A.getErrorDetails(t)),t}}addLink(t,e=!0){const s={id:t.id||`${t.source}-${t.target}`,source:t.source,target:t.target,label:t.label,weight:t.weight,line_type:t.line_type,color:t.color};return this.addEdge(s,{skipRedraw:!e})}deleteEdge(t,e={}){try{const s=this.edges.get(t);if(!s)throw new x(t);this.edges.delete(t);const i=this.links.length;return this.links=this.links.filter(e=>`${e.source.getId()}-${e.target.getId()}`!==t&&!(e.source.getId()===s.source&&e.target.getId()===s.target)),this.links.length<i?(e.skipRedraw||this.renderer?.createElements(this.nodes,this.links),this.currentTransaction&&this.currentTransaction.operations.push({type:"deleteEdge",targetId:t,timestamp:Date.now(),beforeState:{...s},afterState:null}),this.debug&&console.log(`GraphNetwork: Deleted edge "${t}" (${s.source} -> ${s.target})`),this.emit("linkRemoved",{linkData:{...s},edgeId:t,type:"linkRemoved",timestamp:Date.now()}),!0):(this.debug&&console.warn(`GraphNetwork: Edge "${t}" was tracked but not found in render links`),!1)}catch(t){throw this.debug&&console.error("GraphNetwork: Failed to delete edge:",A.getErrorDetails(t)),t}}removeLink(t,e,s=!0){let i=null;for(const[s,n]of this.edges.entries())if(n.source===t&&n.target===e){i=s;break}if(i)return this.deleteEdge(i,{skipRedraw:!s});const n=this.links.length;this.links=this.links.filter(s=>!(s.source.getId()===t&&s.target.getId()===e));const r=this.links.length<n;return r&&s&&this.renderer?.createElements(this.nodes,this.links),this.debug&&r&&console.log(`GraphNetwork: Removed untracked link ${t} -> ${e}`),r&&this.emit("linkRemoved",{linkData:{source:t,target:e},type:"linkRemoved",timestamp:Date.now()}),r}getNodes(){return Array.from(this.nodes.values()).map(t=>({...t.data}))}getLinks(){return this.links.map(t=>({source:t.source.getId(),target:t.target.getId(),label:t.label,weight:t.weight,line_type:t.line_type}))}getData(){return{nodes:this.getNodes(),links:this.getLinks()}}getNode(t){const e=this.nodes.get(t);return e?{...e.data}:null}getEdge(t){const e=this.edges.get(t);return e?{...e}:null}hasNode(t){return this.nodes.has(t)}hasEdge(t){return this.edges.has(t)}updateNode(t,e,s={}){try{const i=this.nodes.get(t);if(!i)throw new T(t);if(void 0!==e.name&&("string"!=typeof e.name||""===e.name.trim()))throw new k("Node name must be a non-empty string",e);if(void 0!==e.type&&"string"!=typeof e.type)throw new k("Node type must be a string",e);if(void 0!==e.size&&("number"!=typeof e.size||e.size<=0))throw new k("Node size must be a positive number",e);const n={...i.data};return Object.assign(i.data,e),s.skipRedraw||(this.renderer?.createElements(this.nodes,this.links),this.ui?.createLegend(Array.from(this.nodes.values()))),this.currentTransaction&&this.currentTransaction.operations.push({type:"updateNode",targetId:t,timestamp:Date.now(),beforeState:n,afterState:{...i.data}}),this.debug&&console.log(`GraphNetwork: Updated node "${t}"`),this.emit("nodeUpdated",{nodeId:t,nodeData:{...i.data},oldData:n,type:"nodeUpdated",timestamp:Date.now()}),!0}catch(t){throw this.debug&&console.error("GraphNetwork: Failed to update node:",A.getErrorDetails(t)),t}}updateEdge(t,e,s={}){try{const i=this.edges.get(t);if(!i)throw new x(t);if(void 0!==e.weight&&("number"!=typeof e.weight||e.weight<0))throw new C("Edge weight must be a non-negative number",e);if(void 0!==e.line_type&&!["solid","dashed","dotted"].includes(e.line_type))throw new C('Edge line_type must be "solid", "dashed", or "dotted"',e);const n={...i};Object.assign(i,e),this.edges.set(t,i);const r=this.links.find(t=>t.source.getId()===i.source&&t.target.getId()===i.target);return r&&(void 0!==e.label&&(r.label=e.label||""),void 0!==e.weight&&(r.weight=e.weight),void 0!==e.line_type&&(r.line_type=e.line_type)),s.skipRedraw||this.renderer?.createElements(this.nodes,this.links),this.currentTransaction&&this.currentTransaction.operations.push({type:"updateEdge",targetId:t,timestamp:Date.now(),beforeState:n,afterState:{...i}}),this.debug&&console.log(`GraphNetwork: Updated edge "${t}"`),this.emit("linkUpdated",{linkData:{...i},oldData:n,edgeId:t,type:"linkUpdated",timestamp:Date.now()}),!0}catch(t){throw this.debug&&console.error("GraphNetwork: Failed to update edge:",A.getErrorDetails(t)),t}}updateNodes(t,e={}){try{const s=[],i=[];if(!e.skipValidation){for(const e of t){if(!e.id||"string"!=typeof e.id)throw new k("Node update must include a valid ID",e);this.nodes.has(e.id)?(void 0===e.name||"string"==typeof e.name&&""!==e.name.trim()||i.push({nodeId:e.id,error:new k("Node name must be a non-empty string",e)}),void 0!==e.size&&("number"!=typeof e.size||e.size<=0)&&i.push({nodeId:e.id,error:new k("Node size must be a positive number",e)})):i.push({nodeId:e.id,error:new T(e.id)})}if(i.length>0)throw new Error(`Bulk node update validation failed for ${i.length} nodes: ${i.map(t=>`${t.nodeId}: ${t.error.message}`).join(", ")}`)}this.currentTransaction&&this.currentTransaction.operations.push({type:"updateNode",targetId:`bulk-${t.length}-nodes`,timestamp:Date.now(),beforeState:t.map(t=>({...this.nodes.get(t.id)?.data})),afterState:t});for(const e of t){const t=this.nodes.get(e.id);if(!t)continue;const i={...t.data},{id:n,...r}=e;Object.assign(t.data,r),s.push(e.id),this.debug&&console.log(`GraphNetwork: Bulk updated node "${e.id}"`),this.emit("nodeUpdated",{nodeId:e.id,nodeData:{...t.data},oldData:i,type:"nodeUpdated",timestamp:Date.now()})}return!e.skipRedraw&&s.length>0&&(this.renderer?.createElements(this.nodes,this.links),this.ui?.createLegend(Array.from(this.nodes.values()))),s.length>0&&this.emit("nodesBulkUpdated",{nodeIds:s,count:s.length,type:"nodesBulkUpdated",timestamp:Date.now()}),this.debug&&console.log(`GraphNetwork: Bulk updated ${s.length} nodes`),s}catch(t){throw this.debug&&console.error("GraphNetwork: Failed to bulk update nodes:",A.getErrorDetails(t)),t}}updateEdges(t,e={}){try{const s=[],i=[];if(!e.skipValidation){for(const e of t){if(!e.id||"string"!=typeof e.id)throw new C("Edge update must include a valid ID",e);this.edges.has(e.id)?(void 0!==e.weight&&("number"!=typeof e.weight||e.weight<0)&&i.push({edgeId:e.id,error:new C("Edge weight must be a non-negative number",e)}),void 0===e.line_type||["solid","dashed","dotted"].includes(e.line_type)||i.push({edgeId:e.id,error:new C('Edge line_type must be "solid", "dashed", or "dotted"',e)})):i.push({edgeId:e.id,error:new x(e.id)})}if(i.length>0)throw new Error(`Bulk edge update validation failed for ${i.length} edges: ${i.map(t=>`${t.edgeId}: ${t.error.message}`).join(", ")}`)}this.currentTransaction&&this.currentTransaction.operations.push({type:"updateEdge",targetId:`bulk-${t.length}-edges`,timestamp:Date.now(),beforeState:t.map(t=>({...this.edges.get(t.id)})),afterState:t});for(const e of t){const t=this.edges.get(e.id);if(!t)continue;const i={...t},{id:n,...r}=e;Object.assign(t,r),this.edges.set(e.id,t);const o=this.links.find(e=>e.source.getId()===t.source&&e.target.getId()===t.target);o&&(void 0!==r.label&&(o.label=r.label||""),void 0!==r.weight&&(o.weight=r.weight),void 0!==r.line_type&&(o.line_type=r.line_type)),s.push(e.id),this.debug&&console.log(`GraphNetwork: Bulk updated edge "${e.id}"`),this.emit("linkUpdated",{linkData:{...t},oldData:i,edgeId:e.id,type:"linkUpdated",timestamp:Date.now()})}return!e.skipRedraw&&s.length>0&&this.renderer?.createElements(this.nodes,this.links),s.length>0&&this.emit("edgesBulkUpdated",{edgeIds:s,count:s.length,type:"edgesBulkUpdated",timestamp:Date.now()}),this.debug&&console.log(`GraphNetwork: Bulk updated ${s.length} edges`),s}catch(t){throw this.debug&&console.error("GraphNetwork: Failed to bulk update edges:",A.getErrorDetails(t)),t}}setData(t,e={}){try{if(!e.skipValidation&&!w(t))throw new Error("Invalid graph data format. Must contain nodes and links arrays.");const s=this.nodes.size,i=this.links.length,n=new Map;if(e.preservePositions)for(const[t,e]of this.nodes.entries())n.set(t,{x:e.position.x,y:e.position.y});if(this.debug&&console.log(`GraphNetwork: Setting data with ${t.nodes.length} nodes and ${t.links.length} links`,e.preservePositions?"(preserving positions)":""),this.currentTransaction&&this.currentTransaction.operations.push({type:"setData",targetId:"graph",timestamp:Date.now(),beforeState:this.getData(),afterState:t}),this.clearGraph(),this.parseData(t),e.preservePositions&&n.size>0)for(const[t,e]of this.nodes.entries()){const s=n.get(t);s&&(e.position.x=s.x,e.position.y=s.y)}this.renderer&&this.renderer.createElements(this.nodes,this.links),this.events&&this.renderer&&this.events.initialize(this.renderer.getSVGElement(),this.nodes,this.eventCallbacks),this.ui&&this.ui.createLegend(Array.from(this.nodes.values())),("reset"===e.layout||!e.preservePositions&&"preserve"!==e.layout)&&this.resetAllNodePositions(),this.physics||(this.physics=new r({damping:this.config.damping,repulsionStrength:this.config.repulsionStrength,attractionStrength:this.config.attractionStrength,groupingStrength:this.config.groupingStrength})),this.isAnimating||this.startAnimation(),this.emit("dataLoaded",{nodeCount:this.nodes.size,linkCount:this.links.length,oldNodeCount:s,oldLinkCount:i,preservedPositions:e.preservePositions&&n.size,type:"dataLoaded",timestamp:Date.now()}),this.debug&&console.log(`GraphNetwork: Data set successfully with ${this.nodes.size} nodes and ${this.links.length} links`)}catch(t){throw this.debug&&console.error("GraphNetwork: Failed to set data:",A.getErrorDetails(t)),t}}mergeData(t,e={}){try{if(!w(t))throw new Error("Invalid graph data format. Must contain nodes and links arrays.");const s={nodesAdded:0,nodesUpdated:0,nodesSkipped:0,edgesAdded:0,edgesUpdated:0,edgesSkipped:0,errors:[]};this.debug&&console.log(`GraphNetwork: Merging data with ${t.nodes.length} nodes and ${t.links.length} links`),this.currentTransaction&&this.currentTransaction.operations.push({type:"mergeData",targetId:"graph",timestamp:Date.now(),beforeState:this.getData(),afterState:t});for(const i of t.nodes)try{if(this.nodes.has(i.id)){if("error"===e.nodeConflictResolution)throw new v(i.id);if("preserve"===e.nodeConflictResolution){s.nodesSkipped++;continue}{const{id:t,...e}=i;this.updateNode(i.id,e,{skipRedraw:!0}),s.nodesUpdated++}}else this.addNode(i,{skipRedraw:!0}),s.nodesAdded++}catch(t){if(t instanceof v&&"error"===e.nodeConflictResolution)throw t;const n=t instanceof Error?t.message:String(t);s.errors.push(`Node ${i.id}: ${n}`)}for(const i of t.links)try{const t=i.id||`${i.source}-${i.target}`;if(this.edges.has(t)){if("error"===e.edgeConflictResolution)throw new N(t);if("preserve"===e.edgeConflictResolution){s.edgesSkipped++;continue}{const{id:e,source:n,target:r,...o}=i;this.updateEdge(t,o,{skipRedraw:!0}),s.edgesUpdated++}}else{const e={id:t,source:i.source,target:i.target,label:i.label,weight:i.weight,line_type:i.line_type,color:i.color};this.addEdge(e,{skipRedraw:!0}),s.edgesAdded++}}catch(t){const e=t instanceof Error?t.message:String(t);s.errors.push(`Edge ${i.source}-${i.target}: ${e}`)}e.skipRedraw||(this.renderer?.createElements(this.nodes,this.links),this.ui?.createLegend(Array.from(this.nodes.values()))),this.emit("dataMerged",{results:s,type:"dataMerged",timestamp:Date.now()}),this.debug&&console.log("GraphNetwork: Data merge completed:",s),s.errors.length>0&&this.debug&&console.warn("GraphNetwork: Merge completed with errors:",s.errors)}catch(t){throw this.debug&&console.error("GraphNetwork: Failed to merge data:",A.getErrorDetails(t)),t}}clearData(t={}){try{const e=this.nodes.size,s=this.links.length;this.debug&&console.log(`GraphNetwork: Clearing ${e} nodes and ${s} links`),this.currentTransaction&&this.currentTransaction.operations.push({type:"clearData",targetId:"graph",timestamp:Date.now(),beforeState:this.getData(),afterState:{nodes:[],links:[]}}),t.animate&&this.debug&&console.log("GraphNetwork: Animation not yet implemented for clearData"),this.clearGraph(),this.renderer?.createElements(this.nodes,this.links),this.ui?.createLegend([]),this.isAnimating&&this.stopAnimation(),this.emit("dataCleared",{clearedNodeCount:e,clearedLinkCount:s,type:"dataCleared",timestamp:Date.now()}),this.debug&&console.log("GraphNetwork: Data cleared successfully")}catch(t){throw this.debug&&console.error("GraphNetwork: Failed to clear data:",A.getErrorDetails(t)),t}}replaceData(t,e={}){return this.setData(t,e)}startTransaction(){if(this.currentTransaction)throw new Error("Transaction already in progress. Commit or rollback current transaction first.");const t=`tx-${++this.transactionIdCounter}-${Date.now()}`;return this.currentTransaction={id:t,startTime:Date.now(),operations:[],beforeSnapshot:this.getData()},this.debug&&console.log(`GraphNetwork: Started transaction "${t}"`),t}commitTransaction(){if(!this.currentTransaction)throw new Error("No transaction in progress");const t=this.currentTransaction,e=Date.now()-t.startTime;this.currentTransaction=null;const s={id:t.id,operationCount:t.operations.length,duration:e};return this.debug&&console.log(`GraphNetwork: Committed transaction "${t.id}" with ${t.operations.length} operations in ${e}ms`),this.emit("transactionCommitted",{transactionId:t.id,operationCount:t.operations.length,duration:e,type:"transactionCommitted",timestamp:Date.now()}),s}rollbackTransaction(){if(!this.currentTransaction)throw new Error("No transaction in progress");const t=this.currentTransaction,e=Date.now()-t.startTime;try{this.debug&&console.log(`GraphNetwork: Rolling back transaction "${t.id}" with ${t.operations.length} operations`),this.setData(t.beforeSnapshot,{skipValidation:!0,preservePositions:!1});const s={id:t.id,operationCount:t.operations.length,duration:e};return this.currentTransaction=null,this.debug&&console.log(`GraphNetwork: Rolled back transaction "${t.id}" in ${e}ms`),this.emit("transactionRolledBack",{transactionId:t.id,operationCount:t.operations.length,duration:e,type:"transactionRolledBack",timestamp:Date.now()}),s}catch(t){throw this.currentTransaction=null,this.debug&&console.error("GraphNetwork: Failed to rollback transaction:",A.getErrorDetails(t)),t}}getTransactionStatus(){return this.currentTransaction?{id:this.currentTransaction.id,startTime:this.currentTransaction.startTime,operationCount:this.currentTransaction.operations.length,duration:Date.now()-this.currentTransaction.startTime}:null}isInTransaction(){return null!==this.currentTransaction}getNodeInstance(t){return this.nodes.get(t)||null}getStats(){return{nodeCount:this.nodes.size,linkCount:this.links.length,visibleNodeCount:this.filteredNodes?.size||this.nodes.size,filteredNodeId:this.currentFilterNodeId,filterDepth:this.config.filterDepth,isAnimating:this.isAnimating,fps:this.fps,lastUpdateTime:this.lastFrameTime}}getConfig(){return{...this.config}}updateConfig(t){Object.assign(this.config,t),this.physics&&(t.damping||t.repulsionStrength||t.attractionStrength||t.groupingStrength)&&this.physics.updateConfig(t),this.ui&&(t.theme||t.title)&&(this.ui.updateConfig(t),t.theme&&this.setTheme(t.theme)),this.events&&(t.zoomSensitivity||t.filterDepth)&&this.events.updateConfig(t),this.debug&&console.log("GraphNetwork: Configuration updated:",t),this.emit("configUpdated",{updates:t})}export(t){const{format:e,includeMetadata:s=!1,filename:i}=t;switch(e){case"json":{const t={nodes:this.getNodes(),links:this.getLinks()};s&&(t.metadata={exportTime:(new Date).toISOString(),stats:this.getStats(),config:this.getConfig(),version:"2.0.0"});const e=JSON.stringify(t,null,2);return i?void this.downloadFile(e,i,"application/json"):e}case"csv":{const t=this.getNodes(),e=this.getLinks();let s="Type,Id,Name,Source,Target,Label,Weight\n";return t.forEach(t=>{s+=`node,${t.id},"${t.name}",,,\n`}),e.forEach(t=>{s+=`link,,,"${t.source}","${t.target}","${t.label||""}",${t.weight||1}\n`}),i?void this.downloadFile(s,i,"text/csv"):s}case"svg":{const t=this.renderer?.getSVGElement();if(!t)throw new Error("SVG renderer not available");const e=(new XMLSerializer).serializeToString(t);return i?void this.downloadFile(e,i,"image/svg+xml"):e}case"png":throw new Error("PNG export not yet implemented");default:throw new Error(`Unsupported export format: ${e}`)}}downloadFile(t,e,s){const i=new Blob([t],{type:s}),n=URL.createObjectURL(i),r=document.createElement("a");r.href=n,r.download=e,document.body.appendChild(r),r.click(),document.body.removeChild(r),URL.revokeObjectURL(n)}selectNode(t,e){return this.selectionManager?.selectNode(t,e)||!1}selectNodes(t,e){return this.selectionManager?.selectNodes(t,e)||[]}selectEdge(t,e){return this.selectionManager?.selectEdge(t,e)||!1}selectEdges(t,e){return this.selectionManager?.selectEdges(t,e)||[]}deselectNode(t){return this.selectionManager?.deselectNode(t)||!1}deselectEdge(t){return this.selectionManager?.deselectEdge(t)||!1}deselectAll(){this.selectionManager?.deselectAll()}toggleNodeSelection(t){return this.selectionManager?.toggleNodeSelection(t)||!1}toggleEdgeSelection(t){return this.selectionManager?.toggleEdgeSelection(t)||!1}isNodeSelected(t){return this.selectionManager?.isNodeSelected(t)||!1}isEdgeSelected(t){return this.selectionManager?.isEdgeSelected(t)||!1}getSelectedNodes(){return this.selectionManager?.getSelectedNodes()||[]}getSelectedEdges(){return this.selectionManager?.getSelectedEdges()||[]}setSelectionMode(t){this.selectionManager?.setSelectionMode(t)}getSelectionMode(){return this.selectionManager?.getSelectionMode()||"multi"}setNodeStyle(t,e){this.styleManager?.setNodeStyle(t,e)}setEdgeStyle(t,e){this.styleManager?.setEdgeStyle(t,e)}updateStyles(t,e){this.styleManager?.updateStyles(t,e)}resetStyle(t){this.styleManager?.resetStyle(t)}getNodeStyle(t){return this.styleManager?.getNodeStyle(t)||null}getEdgeStyle(t){return this.styleManager?.getEdgeStyle(t)||null}highlightNode(t,e){this.highlightManager?.highlightNode(t,e)}highlightNodes(t,e){this.highlightManager?.highlightNodes(t,e)}highlightEdge(t,e){this.highlightManager?.highlightEdge(t,e)}highlightEdges(t,e){this.highlightManager?.highlightEdges(t,e)}highlightPath(t,e,s){return this.highlightManager?.highlightPath(t,e,s)||null}highlightNeighbors(t,e){return this.highlightManager?.highlightNeighbors(t,e)||[]}highlightConnections(t,e){return this.highlightManager?.highlightConnections(t,e)||[]}clearHighlights(){this.highlightManager?.clearHighlights()}clearNodeHighlight(t){this.highlightManager?.clearNodeHighlight(t)}clearEdgeHighlight(t){this.highlightManager?.clearEdgeHighlight(t)}isNodeHighlighted(t){return this.highlightManager?.isNodeHighlighted(t)||!1}isEdgeHighlighted(t){return this.highlightManager?.isEdgeHighlighted(t)||!1}getHighlightedNodes(){return this.highlightManager?.getHighlightedNodes()||[]}getHighlightedEdges(){return this.highlightManager?.getHighlightedEdges()||[]}async focusOnNode(t,e){this.cameraController&&await this.cameraController.focusOnNode(t,e)}async focusOnNodes(t,e){this.cameraController&&await this.cameraController.focusOnNodes(t,e)}async fitToView(t){this.cameraController&&await this.cameraController.fitToView(t)}async centerView(){this.cameraController&&await this.cameraController.centerView()}isCameraAnimating(){return this.cameraController?.isAnimating()||!1}stopCameraAnimation(){this.cameraController?.stopAnimation()}on(t,e){this.customEventListeners.has(t)||this.customEventListeners.set(t,[]),this.customEventListeners.get(t).push(e),this.events?.on(t,e)}off(t,e){const s=this.customEventListeners.get(t);if(s){const t=s.indexOf(e);-1!==t&&s.splice(t,1)}this.events?.off(t,e)}emit(t,e={}){const s=this.customEventListeners.get(t);s&&s.forEach(s=>{try{s(e)}catch(e){console.error(`Error in custom event callback for '${t}':`,e)}}),this.events?.emit(t,e)}toObject(){return{stats:this.getStats(),config:this.getConfig(),data:{nodes:this.getNodes(),links:this.getLinks()},modules:{physics:this.physics?.toObject(),renderer:this.renderer?.toObject(),ui:this.ui?.toObject(),events:this.events?.toObject()},type:"GraphNetwork",version:"2.0.0"}}destroy(){this.debug&&console.log("GraphNetwork: Destroying instance"),this.stopAnimation(),this.physics=null,this.renderer?.destroy(),this.ui?.destroy(),this.events?.destroy(),this.selectionManager?.clearSelection(),this.styleManager?.clearStyles(),this.highlightManager?.clearHighlights(),this.cameraController?.stopAnimation(),this.selectionManager=null,this.styleManager=null,this.highlightManager=null,this.cameraController=null,this.tooltip&&this.tooltip.parentNode&&(this.tooltip.parentNode.removeChild(this.tooltip),this.tooltip=null),this.clearGraph(),this.customEventListeners.clear(),this.emit("destroyed",{uptime:Date.now()-this.startTime,finalStats:this.getStats()})}setTheme(t){if(!this.themeManager)throw new Error("ThemeManager not initialized");try{this.themeManager.setTheme(t),this.renderer&&this.nodes&&this.links&&(this.renderer.createElements(this.nodes,this.links),this.events&&this.events.initialize(this.renderer.getSVGElement(),this.nodes,this.eventCallbacks)),this.ui&&this.ui.updateThemeColors(Array.from(this.nodes.values())),this.emit("themeChanged",{theme:"string"==typeof t?t:t.name,type:"themeChanged",timestamp:Date.now()}),this.debug&&console.log("GraphNetwork: Theme changed to:","string"==typeof t?t:t.name)}catch(t){throw this.debug&&console.error("GraphNetwork: Failed to set theme:",t),t}}getCurrentTheme(){if(!this.themeManager)throw new Error("ThemeManager not initialized");return this.themeManager.getCurrentTheme()}getAvailableThemes(){if(!this.themeManager)throw new Error("ThemeManager not initialized");return this.themeManager.getAvailableThemes()}registerTheme(t,e){if(!this.themeManager)throw new Error("ThemeManager not initialized");this.themeManager.registerTheme(t,e),this.debug&&console.log(`GraphNetwork: Registered custom theme '${t}'`)}updateTheme(t){if(!this.themeManager)throw new Error("ThemeManager not initialized");this.themeManager.updateTheme(t),this.renderer&&this.nodes&&this.links&&(this.renderer.createElements(this.nodes,this.links),this.events&&this.events.initialize(this.renderer.getSVGElement(),this.nodes,this.eventCallbacks)),this.ui&&this.ui.updateThemeColors(Array.from(this.nodes.values())),this.debug&&console.log("GraphNetwork: Theme updated")}setNodeTypeStyle(t,e){if(!this.themeManager)throw new Error("ThemeManager not initialized");this.themeManager.setNodeStyle(t,e),this.renderer&&this.nodes&&this.links&&(this.renderer.createElements(this.nodes,this.links),this.events&&this.events.initialize(this.renderer.getSVGElement(),this.nodes,this.eventCallbacks)),this.debug&&console.log(`GraphNetwork: Updated style for node type '${t}'`)}setEdgeTypeStyle(t,e){if(!this.themeManager)throw new Error("ThemeManager not initialized");this.themeManager.setEdgeStyle(t,e),this.renderer&&this.nodes&&this.links&&(this.renderer.createElements(this.nodes,this.links),this.events&&this.events.initialize(this.renderer.getSVGElement(),this.nodes,this.eventCallbacks)),this.debug&&console.log(`GraphNetwork: Updated style for edge type '${t}'`)}setElementState(t,e,s=!0){if(!this.themeManager||!this.renderer)throw new Error("ThemeManager or Renderer not initialized");this.themeManager.setElementState(t,e,s),this.renderer.updateElementState(t,e,s),this.debug&&console.log(`GraphNetwork: Set element '${t}' state '${e}' to ${s}`)}getThemeManager(){return this.themeManager}configureGrid(t){if(!this.themeManager)throw new Error("ThemeManager not initialized");this.themeManager.configureGrid(t),this.renderer&&this.renderer.applyCanvasTheming()}getGridConfig(){if(!this.themeManager)throw new Error("ThemeManager not initialized");return this.themeManager.getGridConfig()}toString(){const t=this.themeManager?.getCurrentTheme(),e=t?.name||this.config.theme||"unknown";return`GraphNetwork(${this.containerId}: ${this.nodes.size} nodes, ${this.links.length} links, ${e} theme)`}};return s.default}()});